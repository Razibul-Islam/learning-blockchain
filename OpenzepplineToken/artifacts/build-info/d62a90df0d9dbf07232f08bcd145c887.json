{
	"id": "d62a90df0d9dbf07232f08bcd145c887",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"OpenzepplineToken/RewardToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\n\r\ncontract RewardToken is ERC20, Ownable{\r\n\r\n    uint256 currentTime;\r\n\r\n    constructor(address initialOwner) ERC20(\"RewardToken\",\"RWT\") Ownable(initialOwner){\r\n        _mint(msg.sender, 10000 * 10 ** decimals());\r\n    }\r\n\r\n    function mint(uint256 amount) public onlyOwner{\r\n        require(amount <= 100,\"Maximum mint amount is 100\");\r\n        _mint(msg.sender, amount);\r\n    }\r\n\r\n    function mintReward(address to,uint256 amount) public {\r\n        require(currentTime + 60 <= block.timestamp,\"wait 1 minute for each mint\");\r\n        require(amount * 10 ** decimals() <= 100 * 10 ** decimals(),\"Maximum mint amount is 100\");\r\n        require(totalSupply()+amount <= 1000000  *10 ** decimals(),\"Totalsupply exceed\");\r\n\r\n        _mint(to, amount);\r\n        currentTime = block.timestamp;\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 976,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 976,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"OpenzepplineToken/RewardToken.sol": {
				"RewardToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"OpenzepplineToken/RewardToken.sol\":250:1050  contract RewardToken is ERC20, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"OpenzepplineToken/RewardToken.sol\":325:469  constructor(address initialOwner) ERC20(\"RewardToken\",\"RWT\") Ownable(initialOwner){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"OpenzepplineToken/RewardToken.sol\":394:406  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x526577617264546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5257540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"OpenzepplineToken/RewardToken.sol\":418:461  _mint(msg.sender, 10000 * 10 ** decimals()) */\n  tag_18\n    /* \"OpenzepplineToken/RewardToken.sol\":424:434  msg.sender */\n  caller\n    /* \"OpenzepplineToken/RewardToken.sol\":450:460  decimals() */\n  tag_19\n    /* \"OpenzepplineToken/RewardToken.sol\":450:458  decimals */\n  shl(0x20, tag_20)\n    /* \"OpenzepplineToken/RewardToken.sol\":450:460  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"OpenzepplineToken/RewardToken.sol\":444:446  10 */\n  0x0a\n    /* \"OpenzepplineToken/RewardToken.sol\":444:460  10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"OpenzepplineToken/RewardToken.sol\":436:441  10000 */\n  0x2710\n    /* \"OpenzepplineToken/RewardToken.sol\":436:460  10000 * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"OpenzepplineToken/RewardToken.sol\":418:423  _mint */\n  shl(0x20, tag_25)\n    /* \"OpenzepplineToken/RewardToken.sol\":418:461  _mint(msg.sender, 10000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"OpenzepplineToken/RewardToken.sol\":325:469  constructor(address initialOwner) ERC20(\"RewardToken\",\"RWT\") Ownable(initialOwner){... */\n  pop\n    /* \"OpenzepplineToken/RewardToken.sol\":250:1050  contract RewardToken is ERC20, Ownable{... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_47:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_49:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_50:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_86\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_51:\n    /* \"#utility.yul\":641:665   */\n  tag_88\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_89:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_52:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_91\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_51\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_94\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":932:1051   */\ntag_93:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_95\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_52\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_53:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_54:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_55:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_56:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_100:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_102\n  tag_55\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1909:1993   */\ntag_101:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_57:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_58:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_59:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_60:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_107\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_59\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2624:2663   */\n  tag_108\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_59\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_61:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_62:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_63:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_112\n    /* \"#utility.yul\":3013:3047   */\n  tag_113\n    /* \"#utility.yul\":3022:3046   */\n  tag_114\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_61\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3013:3047   */\n  tag_62\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2995:3048   */\n  tag_61\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_64:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_65:\n    /* \"#utility.yul\":3251:3290   */\n  tag_117\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_63\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3312:3403   */\n  tag_118\n    /* \"#utility.yul\":3361:3402   */\n  tag_119\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_64\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_60\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_66:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_67:\n    /* \"#utility.yul\":3572:3604   */\n  tag_122\n  tag_66\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3613:3678   */\n  tag_123\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_65\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_68:\n    /* \"#utility.yul\":3750:3870   */\ntag_125:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_128\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_67\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_125)\ntag_127:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_69:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_131\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_57\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4101:4130   */\n  tag_132\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_58\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_133:\n    /* \"#utility.yul\":4328:4408   */\n  tag_134\n    /* \"#utility.yul\":4384:4406   */\n  tag_135\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_58\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_68\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_130:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_70:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_71:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_138\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_70\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_72:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_140\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_71\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_142\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_53\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_144\n  tag_54\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5233:5289   */\ntag_143:\n    /* \"#utility.yul\":5313:5351   */\n  tag_145\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_56\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5398:5465   */\n  tag_146\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_69\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_149:\n    /* \"#utility.yul\":6339:6406   */\n  tag_150\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_72\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_147)\n    /* \"#utility.yul\":5560:6178   */\ntag_148:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_151\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_57\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_152:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_152)\ntag_154:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_156\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_71\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_155:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_147:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_73:\n    /* \"#utility.yul\":6516:6540   */\n  tag_158\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_50\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_160\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_73\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_74:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_75:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_76:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  dup1\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_164:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_168\n  tag_74\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7300:7350   */\ntag_167:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_169:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_170\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_75\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_164)\ntag_166:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_77:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_171)\n    /* \"#utility.yul\":8164:8204   */\ntag_172:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_171)\n    /* \"#utility.yul\":8213:8249   */\ntag_173:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_174)\n    /* \"#utility.yul\":8352:8379   */\ntag_175:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_171)\n    /* \"#utility.yul\":8388:8579   */\ntag_176:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_178\n  tag_74\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8417:8460   */\ntag_177:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_180\n  tag_74\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8511:8551   */\ntag_179:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_171)\n    /* \"#utility.yul\":8302:8579   */\ntag_174:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_183\n  tag_74\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8766:8806   */\ntag_182:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_171)\n    /* \"#utility.yul\":8588:8834   */\ntag_181:\n    /* \"#utility.yul\":8859:8901   */\n  tag_184\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_76\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_186\n  tag_74\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8911:8962   */\ntag_185:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_171:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_78:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_22:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_189\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_61\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_190\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_78\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_191\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_77\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_24:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_193\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_61\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_194\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_61\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_195\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_61\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_197\n  tag_74\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9651:9790   */\ntag_196:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_37:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_199\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_61\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_200\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_61\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_202\n  tag_74\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9951:9987   */\ntag_201:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_79:\n    /* \"#utility.yul\":10087:10111   */\n  tag_204\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_61\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_41:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_206\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_73\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10405:10477   */\n  tag_207\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_79\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10487:10559   */\n  tag_208\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_79\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_45:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_210\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_79\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"OpenzepplineToken/RewardToken.sol\":250:1050  contract RewardToken is ERC20, Ownable{... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"OpenzepplineToken/RewardToken.sol\":250:1050  contract RewardToken is ERC20, Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9a49090e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenzepplineToken/RewardToken.sol\":637:1045  function mintReward(address to,uint256 amount) public {... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"OpenzepplineToken/RewardToken.sol\":477:629  function mint(uint256 amount) public onlyOwner{... */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_78\n      jump\t// in\n    tag_79:\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_81\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_80)\n    tag_81:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_82:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_82\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_78\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_78\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"OpenzepplineToken/RewardToken.sol\":637:1045  function mintReward(address to,uint256 amount) public {... */\n    tag_59:\n        /* \"OpenzepplineToken/RewardToken.sol\":730:745  block.timestamp */\n      timestamp\n        /* \"OpenzepplineToken/RewardToken.sol\":724:726  60 */\n      0x3c\n        /* \"OpenzepplineToken/RewardToken.sol\":710:721  currentTime */\n      sload(0x06)\n        /* \"OpenzepplineToken/RewardToken.sol\":710:726  currentTime + 60 */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"OpenzepplineToken/RewardToken.sol\":710:745  currentTime + 60 <= block.timestamp */\n      gt\n      iszero\n        /* \"OpenzepplineToken/RewardToken.sol\":702:776  require(currentTime + 60 <= block.timestamp,\"wait 1 minute for each mint\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"OpenzepplineToken/RewardToken.sol\":836:846  decimals() */\n      tag_116\n        /* \"OpenzepplineToken/RewardToken.sol\":836:844  decimals */\n      tag_40\n        /* \"OpenzepplineToken/RewardToken.sol\":836:846  decimals() */\n      jump\t// in\n    tag_116:\n        /* \"OpenzepplineToken/RewardToken.sol\":830:832  10 */\n      0x0a\n        /* \"OpenzepplineToken/RewardToken.sol\":830:846  10 ** decimals() */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"OpenzepplineToken/RewardToken.sol\":824:827  100 */\n      0x64\n        /* \"OpenzepplineToken/RewardToken.sol\":824:846  100 * 10 ** decimals() */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"OpenzepplineToken/RewardToken.sol\":810:820  decimals() */\n      tag_121\n        /* \"OpenzepplineToken/RewardToken.sol\":810:818  decimals */\n      tag_40\n        /* \"OpenzepplineToken/RewardToken.sol\":810:820  decimals() */\n      jump\t// in\n    tag_121:\n        /* \"OpenzepplineToken/RewardToken.sol\":804:806  10 */\n      0x0a\n        /* \"OpenzepplineToken/RewardToken.sol\":804:820  10 ** decimals() */\n      tag_122\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_122:\n        /* \"OpenzepplineToken/RewardToken.sol\":795:801  amount */\n      dup3\n        /* \"OpenzepplineToken/RewardToken.sol\":795:820  amount * 10 ** decimals() */\n      tag_123\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_123:\n        /* \"OpenzepplineToken/RewardToken.sol\":795:846  amount * 10 ** decimals() <= 100 * 10 ** decimals() */\n      gt\n      iszero\n        /* \"OpenzepplineToken/RewardToken.sol\":787:876  require(amount * 10 ** decimals() <= 100 * 10 ** decimals(),\"Maximum mint amount is 100\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"OpenzepplineToken/RewardToken.sol\":935:945  decimals() */\n      tag_127\n        /* \"OpenzepplineToken/RewardToken.sol\":935:943  decimals */\n      tag_40\n        /* \"OpenzepplineToken/RewardToken.sol\":935:945  decimals() */\n      jump\t// in\n    tag_127:\n        /* \"OpenzepplineToken/RewardToken.sol\":929:931  10 */\n      0x0a\n        /* \"OpenzepplineToken/RewardToken.sol\":929:945  10 ** decimals() */\n      tag_128\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_128:\n        /* \"OpenzepplineToken/RewardToken.sol\":919:926  1000000 */\n      0x0f4240\n        /* \"OpenzepplineToken/RewardToken.sol\":919:945  1000000  *10 ** decimals() */\n      tag_129\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_129:\n        /* \"OpenzepplineToken/RewardToken.sol\":909:915  amount */\n      dup2\n        /* \"OpenzepplineToken/RewardToken.sol\":895:908  totalSupply() */\n      tag_130\n        /* \"OpenzepplineToken/RewardToken.sol\":895:906  totalSupply */\n      tag_31\n        /* \"OpenzepplineToken/RewardToken.sol\":895:908  totalSupply() */\n      jump\t// in\n    tag_130:\n        /* \"OpenzepplineToken/RewardToken.sol\":895:915  totalSupply()+amount */\n      tag_131\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_131:\n        /* \"OpenzepplineToken/RewardToken.sol\":895:945  totalSupply()+amount <= 1000000  *10 ** decimals() */\n      gt\n      iszero\n        /* \"OpenzepplineToken/RewardToken.sol\":887:967  require(totalSupply()+amount <= 1000000  *10 ** decimals(),\"Totalsupply exceed\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"OpenzepplineToken/RewardToken.sol\":980:997  _mint(to, amount) */\n      tag_135\n        /* \"OpenzepplineToken/RewardToken.sol\":986:988  to */\n      dup3\n        /* \"OpenzepplineToken/RewardToken.sol\":990:996  amount */\n      dup3\n        /* \"OpenzepplineToken/RewardToken.sol\":980:985  _mint */\n      tag_136\n        /* \"OpenzepplineToken/RewardToken.sol\":980:997  _mint(to, amount) */\n      jump\t// in\n    tag_135:\n        /* \"OpenzepplineToken/RewardToken.sol\":1022:1037  block.timestamp */\n      timestamp\n        /* \"OpenzepplineToken/RewardToken.sol\":1008:1019  currentTime */\n      0x06\n        /* \"OpenzepplineToken/RewardToken.sol\":1008:1037  currentTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenzepplineToken/RewardToken.sol\":637:1045  function mintReward(address to,uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"OpenzepplineToken/RewardToken.sol\":477:629  function mint(uint256 amount) public onlyOwner{... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"OpenzepplineToken/RewardToken.sol\":552:555  100 */\n      0x64\n        /* \"OpenzepplineToken/RewardToken.sol\":542:548  amount */\n      dup2\n        /* \"OpenzepplineToken/RewardToken.sol\":542:555  amount <= 100 */\n      gt\n      iszero\n        /* \"OpenzepplineToken/RewardToken.sol\":534:585  require(amount <= 100,\"Maximum mint amount is 100\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_126\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"OpenzepplineToken/RewardToken.sol\":596:621  _mint(msg.sender, amount) */\n      tag_142\n        /* \"OpenzepplineToken/RewardToken.sol\":602:612  msg.sender */\n      caller\n        /* \"OpenzepplineToken/RewardToken.sol\":614:620  amount */\n      dup3\n        /* \"OpenzepplineToken/RewardToken.sol\":596:601  _mint */\n      tag_136\n        /* \"OpenzepplineToken/RewardToken.sol\":596:621  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_142:\n        /* \"OpenzepplineToken/RewardToken.sol\":477:629  function mint(uint256 amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_191:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_192)\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_196)\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_197\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_198:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_199:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_200:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_201:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_202:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_236\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_198\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":711:782   */\n      tag_237\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_199\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_238\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_200\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":881:910   */\n      tag_239\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_201\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_241\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_202\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_204:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_206:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_207:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_247\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_206\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_208:\n        /* \"#utility.yul\":1876:1900   */\n      tag_249\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_207\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_250:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_209:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_252\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_208\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_210:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_211:\n        /* \"#utility.yul\":2232:2256   */\n      tag_255\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_210\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_256:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_212:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_258\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_211\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_26:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_261\n      tag_204\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2525:2644   */\n    tag_260:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_262\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_209\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_263\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_212\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_213:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_214:\n        /* \"#utility.yul\":3089:3110   */\n      tag_266\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_213\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_29:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_268\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_214\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_215:\n        /* \"#utility.yul\":3426:3450   */\n      tag_270\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_210\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_33:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_272\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_215\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_36:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_275\n      tag_204\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3801:3920   */\n    tag_274:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_276\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_209\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_277\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_209\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_278\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_212\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_216:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_217:\n        /* \"#utility.yul\":4491:4513   */\n      tag_281\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_216\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_283\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_217\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_45:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_286\n      tag_204\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4822:4941   */\n    tag_285:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_287\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_209\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_218:\n        /* \"#utility.yul\":5168:5192   */\n      tag_289\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_207\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_53:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_291\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_218\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_62:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_294\n      tag_204\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5509:5628   */\n    tag_293:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_295\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_212\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_70:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_298\n      tag_204\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5861:5980   */\n    tag_297:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_299\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_209\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_300\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_209\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_219:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_78:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_303:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_305\n      tag_219\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6664:6748   */\n    tag_304:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6940   */\n    tag_220:\n        /* \"#utility.yul\":6808:6885   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6798:6886   */\n      mstore\n        /* \"#utility.yul\":6905:6909   */\n      0x11\n        /* \"#utility.yul\":6902:6903   */\n      0x04\n        /* \"#utility.yul\":6895:6910   */\n      mstore\n        /* \"#utility.yul\":6929:6933   */\n      0x24\n        /* \"#utility.yul\":6926:6927   */\n      0x00\n        /* \"#utility.yul\":6919:6934   */\n      revert\n        /* \"#utility.yul\":6946:7137   */\n    tag_112:\n        /* \"#utility.yul\":6986:6989   */\n      0x00\n        /* \"#utility.yul\":7005:7025   */\n      tag_308\n        /* \"#utility.yul\":7023:7024   */\n      dup3\n        /* \"#utility.yul\":7005:7025   */\n      tag_210\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7000:7025   */\n      swap2\n      pop\n        /* \"#utility.yul\":7039:7059   */\n      tag_309\n        /* \"#utility.yul\":7057:7058   */\n      dup4\n        /* \"#utility.yul\":7039:7059   */\n      tag_210\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7034:7059   */\n      swap3\n      pop\n        /* \"#utility.yul\":7082:7083   */\n      dup3\n        /* \"#utility.yul\":7079:7080   */\n      dup3\n        /* \"#utility.yul\":7075:7084   */\n      add\n        /* \"#utility.yul\":7068:7084   */\n      swap1\n      pop\n        /* \"#utility.yul\":7103:7106   */\n      dup1\n        /* \"#utility.yul\":7100:7101   */\n      dup3\n        /* \"#utility.yul\":7097:7107   */\n      gt\n        /* \"#utility.yul\":7094:7130   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7110:7128   */\n      tag_311\n      tag_220\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7094:7130   */\n    tag_310:\n        /* \"#utility.yul\":6946:7137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7143:7320   */\n    tag_221:\n        /* \"#utility.yul\":7283:7312   */\n      0x776169742031206d696e75746520666f722065616368206d696e740000000000\n        /* \"#utility.yul\":7279:7280   */\n      0x00\n        /* \"#utility.yul\":7271:7277   */\n      dup3\n        /* \"#utility.yul\":7267:7281   */\n      add\n        /* \"#utility.yul\":7260:7313   */\n      mstore\n        /* \"#utility.yul\":7143:7320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7326:7692   */\n    tag_222:\n        /* \"#utility.yul\":7468:7471   */\n      0x00\n        /* \"#utility.yul\":7489:7556   */\n      tag_314\n        /* \"#utility.yul\":7553:7555   */\n      0x1b\n        /* \"#utility.yul\":7548:7551   */\n      dup4\n        /* \"#utility.yul\":7489:7556   */\n      tag_199\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7482:7556   */\n      swap2\n      pop\n        /* \"#utility.yul\":7565:7658   */\n      tag_315\n        /* \"#utility.yul\":7654:7657   */\n      dup3\n        /* \"#utility.yul\":7565:7658   */\n      tag_221\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7683:7685   */\n      0x20\n        /* \"#utility.yul\":7678:7681   */\n      dup3\n        /* \"#utility.yul\":7674:7686   */\n      add\n        /* \"#utility.yul\":7667:7686   */\n      swap1\n      pop\n        /* \"#utility.yul\":7326:7692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7698:8117   */\n    tag_115:\n        /* \"#utility.yul\":7864:7868   */\n      0x00\n        /* \"#utility.yul\":7902:7904   */\n      0x20\n        /* \"#utility.yul\":7891:7900   */\n      dup3\n        /* \"#utility.yul\":7887:7905   */\n      add\n        /* \"#utility.yul\":7879:7905   */\n      swap1\n      pop\n        /* \"#utility.yul\":7951:7960   */\n      dup2\n        /* \"#utility.yul\":7945:7949   */\n      dup2\n        /* \"#utility.yul\":7941:7961   */\n      sub\n        /* \"#utility.yul\":7937:7938   */\n      0x00\n        /* \"#utility.yul\":7926:7935   */\n      dup4\n        /* \"#utility.yul\":7922:7939   */\n      add\n        /* \"#utility.yul\":7915:7962   */\n      mstore\n        /* \"#utility.yul\":7979:8110   */\n      tag_317\n        /* \"#utility.yul\":8105:8109   */\n      dup2\n        /* \"#utility.yul\":7979:8110   */\n      tag_222\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7971:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":7698:8117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8123:8225   */\n    tag_223:\n        /* \"#utility.yul\":8165:8173   */\n      0x00\n        /* \"#utility.yul\":8212:8217   */\n      dup2\n        /* \"#utility.yul\":8209:8210   */\n      0x01\n        /* \"#utility.yul\":8205:8218   */\n      shr\n        /* \"#utility.yul\":8184:8218   */\n      swap1\n      pop\n        /* \"#utility.yul\":8123:8225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8231:9079   */\n    tag_224:\n        /* \"#utility.yul\":8292:8297   */\n      0x00\n        /* \"#utility.yul\":8299:8303   */\n      dup1\n        /* \"#utility.yul\":8323:8329   */\n      dup3\n        /* \"#utility.yul\":8314:8329   */\n      swap2\n      pop\n        /* \"#utility.yul\":8347:8352   */\n      dup4\n        /* \"#utility.yul\":8338:8352   */\n      swap1\n      pop\n        /* \"#utility.yul\":8361:9073   */\n    tag_320:\n        /* \"#utility.yul\":8382:8383   */\n      0x01\n        /* \"#utility.yul\":8372:8380   */\n      dup6\n        /* \"#utility.yul\":8369:8384   */\n      gt\n        /* \"#utility.yul\":8361:9073   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":8477:8481   */\n      dup1\n        /* \"#utility.yul\":8472:8475   */\n      dup7\n        /* \"#utility.yul\":8468:8482   */\n      div\n        /* \"#utility.yul\":8462:8466   */\n      dup2\n        /* \"#utility.yul\":8459:8483   */\n      gt\n        /* \"#utility.yul\":8456:8506   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":8486:8504   */\n      tag_324\n      tag_220\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8456:8506   */\n    tag_323:\n        /* \"#utility.yul\":8536:8537   */\n      0x01\n        /* \"#utility.yul\":8526:8534   */\n      dup6\n        /* \"#utility.yul\":8522:8538   */\n      and\n        /* \"#utility.yul\":8519:8970   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":8951:8955   */\n      dup1\n        /* \"#utility.yul\":8944:8949   */\n      dup3\n        /* \"#utility.yul\":8940:8956   */\n      mul\n        /* \"#utility.yul\":8931:8956   */\n      swap2\n      pop\n        /* \"#utility.yul\":8519:8970   */\n    tag_325:\n        /* \"#utility.yul\":9001:9005   */\n      dup1\n        /* \"#utility.yul\":8995:8999   */\n      dup2\n        /* \"#utility.yul\":8991:9006   */\n      mul\n        /* \"#utility.yul\":8983:9006   */\n      swap1\n      pop\n        /* \"#utility.yul\":9031:9063   */\n      tag_326\n        /* \"#utility.yul\":9054:9062   */\n      dup6\n        /* \"#utility.yul\":9031:9063   */\n      tag_223\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9019:9063   */\n      swap5\n      pop\n        /* \"#utility.yul\":8361:9073   */\n      jump(tag_320)\n    tag_322:\n        /* \"#utility.yul\":8231:9079   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10158   */\n    tag_225:\n        /* \"#utility.yul\":9139:9144   */\n      0x00\n        /* \"#utility.yul\":9330:9338   */\n      dup3\n        /* \"#utility.yul\":9320:9360   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":9351:9352   */\n      0x01\n        /* \"#utility.yul\":9342:9352   */\n      swap1\n      pop\n        /* \"#utility.yul\":9353:9358   */\n      jump(tag_327)\n        /* \"#utility.yul\":9320:9360   */\n    tag_328:\n        /* \"#utility.yul\":9379:9383   */\n      dup2\n        /* \"#utility.yul\":9369:9405   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":9396:9397   */\n      0x00\n        /* \"#utility.yul\":9387:9397   */\n      swap1\n      pop\n        /* \"#utility.yul\":9398:9403   */\n      jump(tag_327)\n        /* \"#utility.yul\":9369:9405   */\n    tag_329:\n        /* \"#utility.yul\":9465:9469   */\n      dup2\n        /* \"#utility.yul\":9513:9514   */\n      0x01\n        /* \"#utility.yul\":9508:9535   */\n      dup2\n      eq\n      tag_331\n      jumpi\n        /* \"#utility.yul\":9549:9550   */\n      0x02\n        /* \"#utility.yul\":9544:9735   */\n      dup2\n      eq\n      tag_332\n      jumpi\n        /* \"#utility.yul\":9458:9735   */\n      jump(tag_330)\n        /* \"#utility.yul\":9508:9535   */\n    tag_331:\n        /* \"#utility.yul\":9526:9527   */\n      0x01\n        /* \"#utility.yul\":9517:9527   */\n      swap2\n      pop\n        /* \"#utility.yul\":9528:9533   */\n      pop\n      jump(tag_327)\n        /* \"#utility.yul\":9544:9735   */\n    tag_332:\n        /* \"#utility.yul\":9589:9592   */\n      0xff\n        /* \"#utility.yul\":9579:9587   */\n      dup5\n        /* \"#utility.yul\":9576:9593   */\n      gt\n        /* \"#utility.yul\":9573:9616   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9596:9614   */\n      tag_334\n      tag_220\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9573:9616   */\n    tag_333:\n        /* \"#utility.yul\":9645:9653   */\n      dup4\n        /* \"#utility.yul\":9642:9643   */\n      0x02\n        /* \"#utility.yul\":9638:9654   */\n      exp\n        /* \"#utility.yul\":9629:9654   */\n      swap2\n      pop\n        /* \"#utility.yul\":9680:9683   */\n      dup5\n        /* \"#utility.yul\":9673:9678   */\n      dup3\n        /* \"#utility.yul\":9670:9684   */\n      gt\n        /* \"#utility.yul\":9667:9707   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":9687:9705   */\n      tag_336\n      tag_220\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9667:9707   */\n    tag_335:\n        /* \"#utility.yul\":9720:9725   */\n      pop\n      jump(tag_327)\n        /* \"#utility.yul\":9458:9735   */\n    tag_330:\n      pop\n        /* \"#utility.yul\":9844:9846   */\n      0x20\n        /* \"#utility.yul\":9834:9842   */\n      dup4\n        /* \"#utility.yul\":9831:9847   */\n      lt\n        /* \"#utility.yul\":9825:9828   */\n      0x0133\n        /* \"#utility.yul\":9819:9823   */\n      dup4\n        /* \"#utility.yul\":9816:9829   */\n      lt\n        /* \"#utility.yul\":9812:9848   */\n      and\n        /* \"#utility.yul\":9794:9796   */\n      0x4e\n        /* \"#utility.yul\":9784:9792   */\n      dup5\n        /* \"#utility.yul\":9781:9797   */\n      lt\n        /* \"#utility.yul\":9776:9778   */\n      0x0b\n        /* \"#utility.yul\":9770:9774   */\n      dup5\n        /* \"#utility.yul\":9767:9779   */\n      lt\n        /* \"#utility.yul\":9763:9798   */\n      and\n        /* \"#utility.yul\":9747:9858   */\n      or\n        /* \"#utility.yul\":9744:9990   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":9900:9908   */\n      dup3\n        /* \"#utility.yul\":9894:9898   */\n      dup3\n        /* \"#utility.yul\":9890:9909   */\n      exp\n        /* \"#utility.yul\":9881:9909   */\n      swap1\n      pop\n        /* \"#utility.yul\":9935:9938   */\n      dup4\n        /* \"#utility.yul\":9928:9933   */\n      dup2\n        /* \"#utility.yul\":9925:9939   */\n      gt\n        /* \"#utility.yul\":9922:9962   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":9942:9960   */\n      tag_339\n      tag_220\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9922:9962   */\n    tag_338:\n        /* \"#utility.yul\":9975:9980   */\n      jump(tag_327)\n        /* \"#utility.yul\":9744:9990   */\n    tag_337:\n        /* \"#utility.yul\":10015:10057   */\n      tag_340\n        /* \"#utility.yul\":10053:10056   */\n      dup5\n        /* \"#utility.yul\":10043:10051   */\n      dup5\n        /* \"#utility.yul\":10037:10041   */\n      dup5\n        /* \"#utility.yul\":10034:10035   */\n      0x01\n        /* \"#utility.yul\":10015:10057   */\n      tag_224\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10000:10057   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10089:10093   */\n      dup2\n        /* \"#utility.yul\":10084:10087   */\n      dup5\n        /* \"#utility.yul\":10080:10094   */\n      div\n        /* \"#utility.yul\":10073:10078   */\n      dup2\n        /* \"#utility.yul\":10070:10095   */\n      gt\n        /* \"#utility.yul\":10067:10118   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":10098:10116   */\n      tag_342\n      tag_220\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10067:10118   */\n    tag_341:\n        /* \"#utility.yul\":10147:10151   */\n      dup2\n        /* \"#utility.yul\":10140:10145   */\n      dup2\n        /* \"#utility.yul\":10136:10152   */\n      mul\n        /* \"#utility.yul\":10127:10152   */\n      swap1\n      pop\n        /* \"#utility.yul\":9085:10158   */\n    tag_327:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10445   */\n    tag_118:\n        /* \"#utility.yul\":10222:10227   */\n      0x00\n        /* \"#utility.yul\":10246:10269   */\n      tag_344\n        /* \"#utility.yul\":10264:10268   */\n      dup3\n        /* \"#utility.yul\":10246:10269   */\n      tag_210\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10238:10269   */\n      swap2\n      pop\n        /* \"#utility.yul\":10290:10315   */\n      tag_345\n        /* \"#utility.yul\":10306:10314   */\n      dup4\n        /* \"#utility.yul\":10290:10315   */\n      tag_216\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":10278:10315   */\n      swap3\n      pop\n        /* \"#utility.yul\":10334:10438   */\n      tag_346\n        /* \"#utility.yul\":10371:10437   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10361:10369   */\n      dup5\n        /* \"#utility.yul\":10355:10359   */\n      dup5\n        /* \"#utility.yul\":10334:10438   */\n      tag_225\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10325:10438   */\n      swap1\n      pop\n        /* \"#utility.yul\":10164:10445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10451:10861   */\n    tag_120:\n        /* \"#utility.yul\":10491:10498   */\n      0x00\n        /* \"#utility.yul\":10514:10534   */\n      tag_348\n        /* \"#utility.yul\":10532:10533   */\n      dup3\n        /* \"#utility.yul\":10514:10534   */\n      tag_210\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10509:10534   */\n      swap2\n      pop\n        /* \"#utility.yul\":10548:10568   */\n      tag_349\n        /* \"#utility.yul\":10566:10567   */\n      dup4\n        /* \"#utility.yul\":10548:10568   */\n      tag_210\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10543:10568   */\n      swap3\n      pop\n        /* \"#utility.yul\":10603:10604   */\n      dup3\n        /* \"#utility.yul\":10600:10601   */\n      dup3\n        /* \"#utility.yul\":10596:10605   */\n      mul\n        /* \"#utility.yul\":10625:10655   */\n      tag_350\n        /* \"#utility.yul\":10643:10654   */\n      dup2\n        /* \"#utility.yul\":10625:10655   */\n      tag_210\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":10614:10655   */\n      swap2\n      pop\n        /* \"#utility.yul\":10804:10805   */\n      dup3\n        /* \"#utility.yul\":10795:10802   */\n      dup3\n        /* \"#utility.yul\":10791:10806   */\n      div\n        /* \"#utility.yul\":10788:10789   */\n      dup5\n        /* \"#utility.yul\":10785:10807   */\n      eq\n        /* \"#utility.yul\":10765:10766   */\n      dup4\n        /* \"#utility.yul\":10758:10767   */\n      iszero\n        /* \"#utility.yul\":10738:10821   */\n      or\n        /* \"#utility.yul\":10715:10854   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":10834:10852   */\n      tag_352\n      tag_220\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10715:10854   */\n    tag_351:\n        /* \"#utility.yul\":10499:10861   */\n      pop\n        /* \"#utility.yul\":10451:10861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10867:11043   */\n    tag_226:\n        /* \"#utility.yul\":11007:11035   */\n      0x4d6178696d756d206d696e7420616d6f756e7420697320313030000000000000\n        /* \"#utility.yul\":11003:11004   */\n      0x00\n        /* \"#utility.yul\":10995:11001   */\n      dup3\n        /* \"#utility.yul\":10991:11005   */\n      add\n        /* \"#utility.yul\":10984:11036   */\n      mstore\n        /* \"#utility.yul\":10867:11043   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11049:11415   */\n    tag_227:\n        /* \"#utility.yul\":11191:11194   */\n      0x00\n        /* \"#utility.yul\":11212:11279   */\n      tag_355\n        /* \"#utility.yul\":11276:11278   */\n      0x1a\n        /* \"#utility.yul\":11271:11274   */\n      dup4\n        /* \"#utility.yul\":11212:11279   */\n      tag_199\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":11205:11279   */\n      swap2\n      pop\n        /* \"#utility.yul\":11288:11381   */\n      tag_356\n        /* \"#utility.yul\":11377:11380   */\n      dup3\n        /* \"#utility.yul\":11288:11381   */\n      tag_226\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":11406:11408   */\n      0x20\n        /* \"#utility.yul\":11401:11404   */\n      dup3\n        /* \"#utility.yul\":11397:11409   */\n      add\n        /* \"#utility.yul\":11390:11409   */\n      swap1\n      pop\n        /* \"#utility.yul\":11049:11415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11421:11840   */\n    tag_126:\n        /* \"#utility.yul\":11587:11591   */\n      0x00\n        /* \"#utility.yul\":11625:11627   */\n      0x20\n        /* \"#utility.yul\":11614:11623   */\n      dup3\n        /* \"#utility.yul\":11610:11628   */\n      add\n        /* \"#utility.yul\":11602:11628   */\n      swap1\n      pop\n        /* \"#utility.yul\":11674:11683   */\n      dup2\n        /* \"#utility.yul\":11668:11672   */\n      dup2\n        /* \"#utility.yul\":11664:11684   */\n      sub\n        /* \"#utility.yul\":11660:11661   */\n      0x00\n        /* \"#utility.yul\":11649:11658   */\n      dup4\n        /* \"#utility.yul\":11645:11662   */\n      add\n        /* \"#utility.yul\":11638:11685   */\n      mstore\n        /* \"#utility.yul\":11702:11833   */\n      tag_358\n        /* \"#utility.yul\":11828:11832   */\n      dup2\n        /* \"#utility.yul\":11702:11833   */\n      tag_227\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":11694:11833   */\n      swap1\n      pop\n        /* \"#utility.yul\":11421:11840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11846:12014   */\n    tag_228:\n        /* \"#utility.yul\":11986:12006   */\n      0x546f74616c737570706c79206578636565640000000000000000000000000000\n        /* \"#utility.yul\":11982:11983   */\n      0x00\n        /* \"#utility.yul\":11974:11980   */\n      dup3\n        /* \"#utility.yul\":11970:11984   */\n      add\n        /* \"#utility.yul\":11963:12007   */\n      mstore\n        /* \"#utility.yul\":11846:12014   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12020:12386   */\n    tag_229:\n        /* \"#utility.yul\":12162:12165   */\n      0x00\n        /* \"#utility.yul\":12183:12250   */\n      tag_361\n        /* \"#utility.yul\":12247:12249   */\n      0x12\n        /* \"#utility.yul\":12242:12245   */\n      dup4\n        /* \"#utility.yul\":12183:12250   */\n      tag_199\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":12176:12250   */\n      swap2\n      pop\n        /* \"#utility.yul\":12259:12352   */\n      tag_362\n        /* \"#utility.yul\":12348:12351   */\n      dup3\n        /* \"#utility.yul\":12259:12352   */\n      tag_228\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":12377:12379   */\n      0x20\n        /* \"#utility.yul\":12372:12375   */\n      dup3\n        /* \"#utility.yul\":12368:12380   */\n      add\n        /* \"#utility.yul\":12361:12380   */\n      swap1\n      pop\n        /* \"#utility.yul\":12020:12386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12392:12811   */\n    tag_134:\n        /* \"#utility.yul\":12558:12562   */\n      0x00\n        /* \"#utility.yul\":12596:12598   */\n      0x20\n        /* \"#utility.yul\":12585:12594   */\n      dup3\n        /* \"#utility.yul\":12581:12599   */\n      add\n        /* \"#utility.yul\":12573:12599   */\n      swap1\n      pop\n        /* \"#utility.yul\":12645:12654   */\n      dup2\n        /* \"#utility.yul\":12639:12643   */\n      dup2\n        /* \"#utility.yul\":12635:12655   */\n      sub\n        /* \"#utility.yul\":12631:12632   */\n      0x00\n        /* \"#utility.yul\":12620:12629   */\n      dup4\n        /* \"#utility.yul\":12616:12633   */\n      add\n        /* \"#utility.yul\":12609:12656   */\n      mstore\n        /* \"#utility.yul\":12673:12804   */\n      tag_364\n        /* \"#utility.yul\":12799:12803   */\n      dup2\n        /* \"#utility.yul\":12673:12804   */\n      tag_229\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":12665:12804   */\n      swap1\n      pop\n        /* \"#utility.yul\":12392:12811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12817:13259   */\n    tag_162:\n        /* \"#utility.yul\":12966:12970   */\n      0x00\n        /* \"#utility.yul\":13004:13006   */\n      0x60\n        /* \"#utility.yul\":12993:13002   */\n      dup3\n        /* \"#utility.yul\":12989:13007   */\n      add\n        /* \"#utility.yul\":12981:13007   */\n      swap1\n      pop\n        /* \"#utility.yul\":13017:13088   */\n      tag_366\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13074:13083   */\n      dup4\n        /* \"#utility.yul\":13070:13087   */\n      add\n        /* \"#utility.yul\":13061:13067   */\n      dup7\n        /* \"#utility.yul\":13017:13088   */\n      tag_218\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":13098:13170   */\n      tag_367\n        /* \"#utility.yul\":13166:13168   */\n      0x20\n        /* \"#utility.yul\":13155:13164   */\n      dup4\n        /* \"#utility.yul\":13151:13169   */\n      add\n        /* \"#utility.yul\":13142:13148   */\n      dup6\n        /* \"#utility.yul\":13098:13170   */\n      tag_215\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":13180:13252   */\n      tag_368\n        /* \"#utility.yul\":13248:13250   */\n      0x40\n        /* \"#utility.yul\":13237:13246   */\n      dup4\n        /* \"#utility.yul\":13233:13251   */\n      add\n        /* \"#utility.yul\":13224:13230   */\n      dup5\n        /* \"#utility.yul\":13180:13252   */\n      tag_215\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12817:13259   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122095fb092d7fd56e535a3367c094f92e59725c515f1b6de35f2a7c7dc4bbe4f85164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1110": {
									"entryPoint": null,
									"id": 1110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 583,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 380,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 716,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 575,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2772,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1445,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:9",
										"nodeType": "YulBlock",
										"src": "0:10797:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "922:274:9",
													"nodeType": "YulBlock",
													"src": "922:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:9",
																"nodeType": "YulBlock",
																"src": "968:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:9"
																			},
																			"nativeSrc": "970:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:9"
																		},
																		"nativeSrc": "970:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nativeSrc": "939:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:9",
																		"nodeType": "YulLiteral",
																		"src": "964:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nativeSrc": "935:32:9",
																"nodeType": "YulFunctionCall",
																"src": "935:32:9"
															},
															"nativeSrc": "932:119:9",
															"nodeType": "YulIf",
															"src": "932:119:9"
														},
														{
															"nativeSrc": "1061:128:9",
															"nodeType": "YulBlock",
															"src": "1061:128:9",
															"statements": [
																{
																	"nativeSrc": "1076:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:9"
																				},
																				"nativeSrc": "1147:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:9"
																		},
																		"nativeSrc": "1115:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:9",
														"nodeType": "YulTypedName",
														"src": "892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:9",
														"nodeType": "YulTypedName",
														"src": "903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:9",
														"nodeType": "YulTypedName",
														"src": "915:6:9",
														"type": ""
													}
												],
												"src": "845:351:9"
											},
											{
												"body": {
													"nativeSrc": "1261:40:9",
													"nodeType": "YulBlock",
													"src": "1261:40:9",
													"statements": [
														{
															"nativeSrc": "1272:22:9",
															"nodeType": "YulAssignment",
															"src": "1272:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:9"
																},
																"nativeSrc": "1282:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:9",
														"nodeType": "YulTypedName",
														"src": "1244:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:9",
														"nodeType": "YulTypedName",
														"src": "1254:6:9",
														"type": ""
													}
												],
												"src": "1202:99:9"
											},
											{
												"body": {
													"nativeSrc": "1335:152:9",
													"nodeType": "YulBlock",
													"src": "1335:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:9"
																},
																"nativeSrc": "1345:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:9"
															},
															"nativeSrc": "1345:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:9"
																},
																"nativeSrc": "1442:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:9"
															},
															"nativeSrc": "1442:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:9"
																},
																"nativeSrc": "1466:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:9"
															},
															"nativeSrc": "1466:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:9"
											},
											{
												"body": {
													"nativeSrc": "1521:152:9",
													"nodeType": "YulBlock",
													"src": "1521:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:9"
																},
																"nativeSrc": "1531:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:9"
															},
															"nativeSrc": "1531:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:9"
																},
																"nativeSrc": "1628:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:9"
															},
															"nativeSrc": "1628:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:9"
															},
															"nativeSrc": "1652:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:9"
											},
											{
												"body": {
													"nativeSrc": "1730:269:9",
													"nodeType": "YulBlock",
													"src": "1730:269:9",
													"statements": [
														{
															"nativeSrc": "1740:22:9",
															"nodeType": "YulAssignment",
															"src": "1740:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:9"
																},
																"nativeSrc": "1750:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:9"
																}
															]
														},
														{
															"nativeSrc": "1771:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:9"
																},
																"nativeSrc": "1797:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:9",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:9",
																"nodeType": "YulBlock",
																"src": "1848:51:9",
																"statements": [
																	{
																		"nativeSrc": "1862:27:9",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:9"
																			},
																			"nativeSrc": "1872:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:9"
																},
																"nativeSrc": "1821:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:9"
															},
															"nativeSrc": "1818:81:9",
															"nodeType": "YulIf",
															"src": "1818:81:9"
														},
														{
															"body": {
																"nativeSrc": "1951:42:9",
																"nodeType": "YulBlock",
																"src": "1951:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:9"
																			},
																			"nativeSrc": "1965:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:9"
																		},
																		"nativeSrc": "1965:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:9"
																		},
																		"nativeSrc": "1935:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:9"
																},
																"nativeSrc": "1912:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:9"
															},
															"nativeSrc": "1909:84:9",
															"nodeType": "YulIf",
															"src": "1909:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:9",
														"nodeType": "YulTypedName",
														"src": "1714:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:9",
														"nodeType": "YulTypedName",
														"src": "1723:6:9",
														"type": ""
													}
												],
												"src": "1679:320:9"
											},
											{
												"body": {
													"nativeSrc": "2059:87:9",
													"nodeType": "YulBlock",
													"src": "2059:87:9",
													"statements": [
														{
															"nativeSrc": "2069:11:9",
															"nodeType": "YulAssignment",
															"src": "2069:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:9",
																"nodeType": "YulIdentifier",
																"src": "2077:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:9"
																},
																"nativeSrc": "2090:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:9"
															},
															"nativeSrc": "2090:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:9"
														},
														{
															"nativeSrc": "2113:26:9",
															"nodeType": "YulAssignment",
															"src": "2113:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:9"
																},
																"nativeSrc": "2121:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:9",
														"nodeType": "YulTypedName",
														"src": "2046:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:9",
														"nodeType": "YulTypedName",
														"src": "2054:4:9",
														"type": ""
													}
												],
												"src": "2005:141:9"
											},
											{
												"body": {
													"nativeSrc": "2196:49:9",
													"nodeType": "YulBlock",
													"src": "2196:49:9",
													"statements": [
														{
															"nativeSrc": "2206:33:9",
															"nodeType": "YulAssignment",
															"src": "2206:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:9"
																		},
																		"nativeSrc": "2220:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:9"
																},
																"nativeSrc": "2216:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:9",
														"nodeType": "YulTypedName",
														"src": "2179:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:9",
														"nodeType": "YulTypedName",
														"src": "2189:6:9",
														"type": ""
													}
												],
												"src": "2152:93:9"
											},
											{
												"body": {
													"nativeSrc": "2304:54:9",
													"nodeType": "YulBlock",
													"src": "2304:54:9",
													"statements": [
														{
															"nativeSrc": "2314:37:9",
															"nodeType": "YulAssignment",
															"src": "2314:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:9"
																},
																"nativeSrc": "2335:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:9",
														"nodeType": "YulTypedName",
														"src": "2279:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:9",
														"nodeType": "YulTypedName",
														"src": "2285:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:9",
														"nodeType": "YulTypedName",
														"src": "2295:8:9",
														"type": ""
													}
												],
												"src": "2251:107:9"
											},
											{
												"body": {
													"nativeSrc": "2440:317:9",
													"nodeType": "YulBlock",
													"src": "2440:317:9",
													"statements": [
														{
															"nativeSrc": "2450:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:9"
																},
																"nativeSrc": "2467:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:9",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:9"
																},
																"nativeSrc": "2506:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:9",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:9",
															"nodeType": "YulAssignment",
															"src": "2612:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:9"
																},
																"nativeSrc": "2624:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:9"
																}
															]
														},
														{
															"nativeSrc": "2672:30:9",
															"nodeType": "YulAssignment",
															"src": "2672:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:9"
																		},
																		"nativeSrc": "2692:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:9"
																},
																"nativeSrc": "2681:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:9"
																}
															]
														},
														{
															"nativeSrc": "2711:40:9",
															"nodeType": "YulAssignment",
															"src": "2711:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:9"
																		},
																		"nativeSrc": "2731:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:9"
																},
																"nativeSrc": "2721:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:9",
														"nodeType": "YulTypedName",
														"src": "2401:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:9",
														"nodeType": "YulTypedName",
														"src": "2408:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:9",
														"nodeType": "YulTypedName",
														"src": "2420:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:9",
														"nodeType": "YulTypedName",
														"src": "2433:6:9",
														"type": ""
													}
												],
												"src": "2364:393:9"
											},
											{
												"body": {
													"nativeSrc": "2808:32:9",
													"nodeType": "YulBlock",
													"src": "2808:32:9",
													"statements": [
														{
															"nativeSrc": "2818:16:9",
															"nodeType": "YulAssignment",
															"src": "2818:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:9",
																"nodeType": "YulIdentifier",
																"src": "2829:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:9",
														"nodeType": "YulTypedName",
														"src": "2790:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:9",
														"nodeType": "YulTypedName",
														"src": "2800:7:9",
														"type": ""
													}
												],
												"src": "2763:77:9"
											},
											{
												"body": {
													"nativeSrc": "2878:28:9",
													"nodeType": "YulBlock",
													"src": "2878:28:9",
													"statements": [
														{
															"nativeSrc": "2888:12:9",
															"nodeType": "YulAssignment",
															"src": "2888:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:9",
																"nodeType": "YulIdentifier",
																"src": "2895:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:9",
														"nodeType": "YulTypedName",
														"src": "2864:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:9",
														"nodeType": "YulTypedName",
														"src": "2874:3:9",
														"type": ""
													}
												],
												"src": "2846:60:9"
											},
											{
												"body": {
													"nativeSrc": "2972:82:9",
													"nodeType": "YulBlock",
													"src": "2972:82:9",
													"statements": [
														{
															"nativeSrc": "2982:66:9",
															"nodeType": "YulAssignment",
															"src": "2982:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:9"
																				},
																				"nativeSrc": "3022:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:9"
																		},
																		"nativeSrc": "3013:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:9"
																},
																"nativeSrc": "2995:53:9",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:9",
														"nodeType": "YulTypedName",
														"src": "2952:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:9",
														"nodeType": "YulTypedName",
														"src": "2962:9:9",
														"type": ""
													}
												],
												"src": "2912:142:9"
											},
											{
												"body": {
													"nativeSrc": "3107:28:9",
													"nodeType": "YulBlock",
													"src": "3107:28:9",
													"statements": [
														{
															"nativeSrc": "3117:12:9",
															"nodeType": "YulAssignment",
															"src": "3117:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:9",
																"nodeType": "YulIdentifier",
																"src": "3124:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:9",
														"nodeType": "YulTypedName",
														"src": "3093:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:9",
														"nodeType": "YulTypedName",
														"src": "3103:3:9",
														"type": ""
													}
												],
												"src": "3060:75:9"
											},
											{
												"body": {
													"nativeSrc": "3217:193:9",
													"nodeType": "YulBlock",
													"src": "3217:193:9",
													"statements": [
														{
															"nativeSrc": "3227:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:9"
																},
																"nativeSrc": "3251:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:9",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:9"
																				},
																				"nativeSrc": "3340:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:9"
																				},
																				"nativeSrc": "3361:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:9"
																		},
																		"nativeSrc": "3312:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:9"
																},
																"nativeSrc": "3299:105:9",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:9"
															},
															"nativeSrc": "3299:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:9",
														"nodeType": "YulTypedName",
														"src": "3194:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:9",
														"nodeType": "YulTypedName",
														"src": "3200:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:9",
														"nodeType": "YulTypedName",
														"src": "3208:7:9",
														"type": ""
													}
												],
												"src": "3141:269:9"
											},
											{
												"body": {
													"nativeSrc": "3465:24:9",
													"nodeType": "YulBlock",
													"src": "3465:24:9",
													"statements": [
														{
															"nativeSrc": "3475:8:9",
															"nodeType": "YulAssignment",
															"src": "3475:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:9",
																"nodeType": "YulLiteral",
																"src": "3482:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:9",
														"nodeType": "YulTypedName",
														"src": "3461:3:9",
														"type": ""
													}
												],
												"src": "3416:73:9"
											},
											{
												"body": {
													"nativeSrc": "3548:136:9",
													"nodeType": "YulBlock",
													"src": "3548:136:9",
													"statements": [
														{
															"nativeSrc": "3558:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:9"
																},
																"nativeSrc": "3572:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:9"
																},
																"nativeSrc": "3613:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:9"
															},
															"nativeSrc": "3613:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:9",
														"nodeType": "YulTypedName",
														"src": "3534:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:9",
														"nodeType": "YulTypedName",
														"src": "3540:6:9",
														"type": ""
													}
												],
												"src": "3495:189:9"
											},
											{
												"body": {
													"nativeSrc": "3740:136:9",
													"nodeType": "YulBlock",
													"src": "3740:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:9",
																"nodeType": "YulBlock",
																"src": "3807:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:9"
																			},
																			"nativeSrc": "3821:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:9"
																		},
																		"nativeSrc": "3821:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:9"
																},
																"nativeSrc": "3757:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:9"
															},
															"nativeSrc": "3750:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:9",
																"nodeType": "YulBlock",
																"src": "3772:26:9",
																"statements": [
																	{
																		"nativeSrc": "3774:22:9",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:9"
																			},
																			"nativeSrc": "3783:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:9",
																"nodeType": "YulBlock",
																"src": "3754:2:9",
																"statements": []
															},
															"src": "3750:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:9",
														"nodeType": "YulTypedName",
														"src": "3728:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:9",
														"nodeType": "YulTypedName",
														"src": "3735:3:9",
														"type": ""
													}
												],
												"src": "3690:186:9"
											},
											{
												"body": {
													"nativeSrc": "3961:464:9",
													"nodeType": "YulBlock",
													"src": "3961:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:9",
																"nodeType": "YulBlock",
																"src": "3987:431:9",
																"statements": [
																	{
																		"nativeSrc": "4001:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:9"
																			},
																			"nativeSrc": "4017:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:9",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:9"
																					},
																					"nativeSrc": "4101:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:9"
																			},
																			"nativeSrc": "4087:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:9",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:9",
																			"nodeType": "YulBlock",
																			"src": "4288:27:9",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:9",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:9",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:9"
																			},
																			"nativeSrc": "4269:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:9"
																		},
																		"nativeSrc": "4266:49:9",
																		"nodeType": "YulIf",
																		"src": "4266:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:9"
																							},
																							"nativeSrc": "4384:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:9"
																					},
																					"nativeSrc": "4370:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:9"
																			},
																			"nativeSrc": "4328:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:9"
																		},
																		"nativeSrc": "4328:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:9"
																},
																"nativeSrc": "3975:11:9",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:9"
															},
															"nativeSrc": "3972:446:9",
															"nodeType": "YulIf",
															"src": "3972:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:9",
														"nodeType": "YulTypedName",
														"src": "3937:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:9",
														"nodeType": "YulTypedName",
														"src": "3944:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:9",
														"nodeType": "YulTypedName",
														"src": "3949:10:9",
														"type": ""
													}
												],
												"src": "3882:543:9"
											},
											{
												"body": {
													"nativeSrc": "4494:54:9",
													"nodeType": "YulBlock",
													"src": "4494:54:9",
													"statements": [
														{
															"nativeSrc": "4504:37:9",
															"nodeType": "YulAssignment",
															"src": "4504:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:9"
																},
																"nativeSrc": "4525:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:9",
														"nodeType": "YulTypedName",
														"src": "4469:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:9",
														"nodeType": "YulTypedName",
														"src": "4475:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:9",
														"nodeType": "YulTypedName",
														"src": "4485:8:9",
														"type": ""
													}
												],
												"src": "4431:117:9"
											},
											{
												"body": {
													"nativeSrc": "4605:118:9",
													"nodeType": "YulBlock",
													"src": "4605:118:9",
													"statements": [
														{
															"nativeSrc": "4615:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:9"
																				},
																				"nativeSrc": "4660:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:9"
																				},
																				"nativeSrc": "4675:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:9"
																		},
																		"nativeSrc": "4631:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:9"
																},
																"nativeSrc": "4627:56:9",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:9",
															"nodeType": "YulAssignment",
															"src": "4692:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:9"
																},
																"nativeSrc": "4702:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:9",
														"nodeType": "YulTypedName",
														"src": "4582:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:9",
														"nodeType": "YulTypedName",
														"src": "4588:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:9",
														"nodeType": "YulTypedName",
														"src": "4598:6:9",
														"type": ""
													}
												],
												"src": "4554:169:9"
											},
											{
												"body": {
													"nativeSrc": "4809:214:9",
													"nodeType": "YulBlock",
													"src": "4809:214:9",
													"statements": [
														{
															"nativeSrc": "4942:37:9",
															"nodeType": "YulAssignment",
															"src": "4942:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:9"
																},
																"nativeSrc": "4950:29:9",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:9"
																}
															]
														},
														{
															"nativeSrc": "4988:29:9",
															"nodeType": "YulAssignment",
															"src": "4988:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:9"
																		},
																		"nativeSrc": "5005:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:9"
																},
																"nativeSrc": "4996:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:9",
														"nodeType": "YulTypedName",
														"src": "4790:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:9",
														"nodeType": "YulTypedName",
														"src": "4796:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:9",
														"nodeType": "YulTypedName",
														"src": "4804:4:9",
														"type": ""
													}
												],
												"src": "4728:295:9"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:9",
													"nodeType": "YulBlock",
													"src": "5120:1303:9",
													"statements": [
														{
															"nativeSrc": "5131:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:9"
																},
																"nativeSrc": "5145:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:9",
																"nodeType": "YulBlock",
																"src": "5267:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:9"
																			},
																			"nativeSrc": "5269:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:9"
																		},
																		"nativeSrc": "5269:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:9"
																},
																"nativeSrc": "5236:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:9"
															},
															"nativeSrc": "5233:56:9",
															"nodeType": "YulIf",
															"src": "5233:56:9"
														},
														{
															"nativeSrc": "5299:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:9"
																		},
																		"nativeSrc": "5339:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:9"
																},
																"nativeSrc": "5313:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:9"
																},
																"nativeSrc": "5398:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:9"
															},
															"nativeSrc": "5398:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:9"
														},
														{
															"nativeSrc": "5475:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:9",
																"nodeType": "YulLiteral",
																"src": "5492:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:9",
															"nodeType": "YulAssignment",
															"src": "5503:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:9",
																"nodeType": "YulLiteral",
																"src": "5516:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:9",
																		"nodeType": "YulBlock",
																		"src": "5567:611:9",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:9",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:9"
																							},
																							"nativeSrc": "5608:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:9"
																					},
																					"nativeSrc": "5596:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:9",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:9"
																					},
																					"nativeSrc": "5646:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:9",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:9",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:9",
																					"nodeType": "YulBlock",
																					"src": "5764:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:9"
																												},
																												"nativeSrc": "5803:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:9"
																										},
																										"nativeSrc": "5797:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:9"
																								},
																								"nativeSrc": "5782:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:9"
																							},
																							"nativeSrc": "5782:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:9"
																						},
																						{
																							"nativeSrc": "5841:24:9",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:9",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:9"
																								},
																								"nativeSrc": "5851:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:9",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:9",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:9"
																								},
																								"nativeSrc": "5895:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:9"
																					},
																					"nativeSrc": "5727:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:9"
																				},
																				"nativeSrc": "5719:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:9",
																					"nodeType": "YulBlock",
																					"src": "5742:21:9",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:9",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:9",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:9"
																								},
																								"nativeSrc": "5749:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:9",
																					"nodeType": "YulBlock",
																					"src": "5723:3:9",
																					"statements": []
																				},
																				"src": "5719:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:9",
																					"nodeType": "YulBlock",
																					"src": "5963:156:9",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:9"
																										},
																										"nativeSrc": "6004:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:9"
																								},
																								"nativeSrc": "5998:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:9",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:9",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:9"
																												},
																												"nativeSrc": "6086:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:9"
																										},
																										"nativeSrc": "6056:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:9"
																								},
																								"nativeSrc": "6041:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:9"
																							},
																							"nativeSrc": "6041:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:9"
																					},
																					"nativeSrc": "5943:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:9"
																				},
																				"nativeSrc": "5940:179:9",
																				"nodeType": "YulIf",
																				"src": "5940:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:9",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:9"
																									},
																									"nativeSrc": "6149:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:9",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:9"
																							},
																							"nativeSrc": "6145:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:9"
																					},
																					"nativeSrc": "6132:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:9"
																				},
																				"nativeSrc": "6132:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:9"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:9",
																	"nodeType": "YulCase",
																	"src": "5560:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:9",
																		"nodeType": "YulBlock",
																		"src": "6195:222:9",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:9",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:9",
																					"nodeType": "YulBlock",
																					"src": "6246:67:9",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:9",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:9"
																										},
																										"nativeSrc": "6279:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:9"
																								},
																								"nativeSrc": "6273:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:9"
																				},
																				"nativeSrc": "6236:77:9",
																				"nodeType": "YulIf",
																				"src": "6236:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:9"
																							},
																							"nativeSrc": "6339:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:9"
																					},
																					"nativeSrc": "6326:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:9"
																				},
																				"nativeSrc": "6326:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:9"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:9",
																	"nodeType": "YulCase",
																	"src": "6187:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:9"
																},
																"nativeSrc": "5537:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:9"
															},
															"nativeSrc": "5530:887:9",
															"nodeType": "YulSwitch",
															"src": "5530:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:9",
														"nodeType": "YulTypedName",
														"src": "5109:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:9",
														"nodeType": "YulTypedName",
														"src": "5115:3:9",
														"type": ""
													}
												],
												"src": "5028:1395:9"
											},
											{
												"body": {
													"nativeSrc": "6494:53:9",
													"nodeType": "YulBlock",
													"src": "6494:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:9"
																		},
																		"nativeSrc": "6516:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:9"
																},
																"nativeSrc": "6504:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:9"
															},
															"nativeSrc": "6504:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:9",
														"nodeType": "YulTypedName",
														"src": "6482:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:9",
														"nodeType": "YulTypedName",
														"src": "6489:3:9",
														"type": ""
													}
												],
												"src": "6429:118:9"
											},
											{
												"body": {
													"nativeSrc": "6651:124:9",
													"nodeType": "YulBlock",
													"src": "6651:124:9",
													"statements": [
														{
															"nativeSrc": "6661:26:9",
															"nodeType": "YulAssignment",
															"src": "6661:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:9"
																},
																"nativeSrc": "6669:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:9"
																		},
																		"nativeSrc": "6750:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:9"
																},
																"nativeSrc": "6697:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:9"
															},
															"nativeSrc": "6697:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:9",
														"nodeType": "YulTypedName",
														"src": "6623:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:9",
														"nodeType": "YulTypedName",
														"src": "6635:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:9",
														"nodeType": "YulTypedName",
														"src": "6646:4:9",
														"type": ""
													}
												],
												"src": "6553:222:9"
											},
											{
												"body": {
													"nativeSrc": "6809:152:9",
													"nodeType": "YulBlock",
													"src": "6809:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:9"
																},
																"nativeSrc": "6819:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:9"
															},
															"nativeSrc": "6819:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:9"
																},
																"nativeSrc": "6916:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:9"
															},
															"nativeSrc": "6916:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:9"
																},
																"nativeSrc": "6940:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:9"
															},
															"nativeSrc": "6940:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:9"
											},
											{
												"body": {
													"nativeSrc": "7018:51:9",
													"nodeType": "YulBlock",
													"src": "7018:51:9",
													"statements": [
														{
															"nativeSrc": "7028:34:9",
															"nodeType": "YulAssignment",
															"src": "7028:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7053:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7056:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7049:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:9"
																},
																"nativeSrc": "7049:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7049:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7028:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6967:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6999:5:9",
														"nodeType": "YulTypedName",
														"src": "6999:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7009:8:9",
														"nodeType": "YulTypedName",
														"src": "7009:8:9",
														"type": ""
													}
												],
												"src": "6967:102:9"
											},
											{
												"body": {
													"nativeSrc": "7148:775:9",
													"nodeType": "YulBlock",
													"src": "7148:775:9",
													"statements": [
														{
															"nativeSrc": "7158:15:9",
															"nodeType": "YulAssignment",
															"src": "7158:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "7167:6:9",
																"nodeType": "YulIdentifier",
																"src": "7167:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7158:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:9"
																}
															]
														},
														{
															"nativeSrc": "7182:14:9",
															"nodeType": "YulAssignment",
															"src": "7182:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "7191:5:9",
																"nodeType": "YulIdentifier",
																"src": "7191:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7182:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7240:677:9",
																"nodeType": "YulBlock",
																"src": "7240:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7328:22:9",
																			"nodeType": "YulBlock",
																			"src": "7328:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7330:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:9"
																						},
																						"nativeSrc": "7330:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:9"
																					},
																					"nativeSrc": "7330:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7306:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7316:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7321:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7312:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:9"
																					},
																					"nativeSrc": "7312:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7303:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:9"
																			},
																			"nativeSrc": "7303:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:9"
																		},
																		"nativeSrc": "7300:50:9",
																		"nodeType": "YulIf",
																		"src": "7300:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "7395:419:9",
																			"nodeType": "YulBlock",
																			"src": "7395:419:9",
																			"statements": [
																				{
																					"nativeSrc": "7775:25:9",
																					"nodeType": "YulAssignment",
																					"src": "7775:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7788:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7795:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7784:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:9"
																						},
																						"nativeSrc": "7784:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7775:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7370:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7380:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7366:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:9"
																			},
																			"nativeSrc": "7366:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:9"
																		},
																		"nativeSrc": "7363:451:9",
																		"nodeType": "YulIf",
																		"src": "7363:451:9"
																	},
																	{
																		"nativeSrc": "7827:23:9",
																		"nodeType": "YulAssignment",
																		"src": "7827:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7839:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7845:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7835:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:9"
																			},
																			"nativeSrc": "7835:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7827:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7863:44:9",
																		"nodeType": "YulAssignment",
																		"src": "7863:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7898:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7875:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:9"
																			},
																			"nativeSrc": "7875:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7863:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7216:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7213:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:9"
																},
																"nativeSrc": "7213:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7213:15:9"
															},
															"nativeSrc": "7205:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7229:2:9",
																"nodeType": "YulBlock",
																"src": "7229:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7209:3:9",
																"nodeType": "YulBlock",
																"src": "7209:3:9",
																"statements": []
															},
															"src": "7205:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7075:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7103:6:9",
														"nodeType": "YulTypedName",
														"src": "7103:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7111:5:9",
														"nodeType": "YulTypedName",
														"src": "7111:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7118:8:9",
														"nodeType": "YulTypedName",
														"src": "7118:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7128:3:9",
														"nodeType": "YulTypedName",
														"src": "7128:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7136:5:9",
														"nodeType": "YulTypedName",
														"src": "7136:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7143:4:9",
														"nodeType": "YulTypedName",
														"src": "7143:4:9",
														"type": ""
													}
												],
												"src": "7075:848:9"
											},
											{
												"body": {
													"nativeSrc": "7989:1013:9",
													"nodeType": "YulBlock",
													"src": "7989:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8184:20:9",
																"nodeType": "YulBlock",
																"src": "8184:20:9",
																"statements": [
																	{
																		"nativeSrc": "8186:10:9",
																		"nodeType": "YulAssignment",
																		"src": "8186:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8195:1:9",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8186:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8197:5:9",
																		"nodeType": "YulLeave",
																		"src": "8197:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8174:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8167:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:9"
																},
																"nativeSrc": "8167:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8167:16:9"
															},
															"nativeSrc": "8164:40:9",
															"nodeType": "YulIf",
															"src": "8164:40:9"
														},
														{
															"body": {
																"nativeSrc": "8229:20:9",
																"nodeType": "YulBlock",
																"src": "8229:20:9",
																"statements": [
																	{
																		"nativeSrc": "8231:10:9",
																		"nodeType": "YulAssignment",
																		"src": "8231:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8240:1:9",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8231:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8242:5:9",
																		"nodeType": "YulLeave",
																		"src": "8242:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8223:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8216:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:9"
																},
																"nativeSrc": "8216:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8216:12:9"
															},
															"nativeSrc": "8213:36:9",
															"nodeType": "YulIf",
															"src": "8213:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8359:20:9",
																		"nodeType": "YulBlock",
																		"src": "8359:20:9",
																		"statements": [
																			{
																				"nativeSrc": "8361:10:9",
																				"nodeType": "YulAssignment",
																				"src": "8361:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8361:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8372:5:9",
																				"nodeType": "YulLeave",
																				"src": "8372:5:9"
																			}
																		]
																	},
																	"nativeSrc": "8352:27:9",
																	"nodeType": "YulCase",
																	"src": "8352:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8357:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8403:176:9",
																		"nodeType": "YulBlock",
																		"src": "8403:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8438:22:9",
																					"nodeType": "YulBlock",
																					"src": "8438:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8440:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:9"
																								},
																								"nativeSrc": "8440:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:9"
																							},
																							"nativeSrc": "8440:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8423:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8433:3:9",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8420:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:9"
																					},
																					"nativeSrc": "8420:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:9"
																				},
																				"nativeSrc": "8417:43:9",
																				"nodeType": "YulIf",
																				"src": "8417:43:9"
																			},
																			{
																				"nativeSrc": "8473:25:9",
																				"nodeType": "YulAssignment",
																				"src": "8473:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8486:1:9",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8489:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8482:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:9"
																					},
																					"nativeSrc": "8482:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8473:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8529:22:9",
																					"nodeType": "YulBlock",
																					"src": "8529:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8531:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:9"
																								},
																								"nativeSrc": "8531:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:9"
																							},
																							"nativeSrc": "8531:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8517:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8524:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8514:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:9"
																					},
																					"nativeSrc": "8514:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:9"
																				},
																				"nativeSrc": "8511:40:9",
																				"nodeType": "YulIf",
																				"src": "8511:40:9"
																			},
																			{
																				"nativeSrc": "8564:5:9",
																				"nodeType": "YulLeave",
																				"src": "8564:5:9"
																			}
																		]
																	},
																	"nativeSrc": "8388:191:9",
																	"nodeType": "YulCase",
																	"src": "8388:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8393:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8309:4:9",
																"nodeType": "YulIdentifier",
																"src": "8309:4:9"
															},
															"nativeSrc": "8302:277:9",
															"nodeType": "YulSwitch",
															"src": "8302:277:9"
														},
														{
															"body": {
																"nativeSrc": "8711:123:9",
																"nodeType": "YulBlock",
																"src": "8711:123:9",
																"statements": [
																	{
																		"nativeSrc": "8725:28:9",
																		"nodeType": "YulAssignment",
																		"src": "8725:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8738:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8744:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8734:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:9"
																			},
																			"nativeSrc": "8734:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8725:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8784:22:9",
																			"nodeType": "YulBlock",
																			"src": "8784:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8786:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:9"
																						},
																						"nativeSrc": "8786:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:9"
																					},
																					"nativeSrc": "8786:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8772:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8779:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8769:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:9"
																			},
																			"nativeSrc": "8769:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:9"
																		},
																		"nativeSrc": "8766:40:9",
																		"nodeType": "YulIf",
																		"src": "8766:40:9"
																	},
																	{
																		"nativeSrc": "8819:5:9",
																		"nodeType": "YulLeave",
																		"src": "8819:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8614:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8620:2:9",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8611:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:9"
																				},
																				"nativeSrc": "8611:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8628:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8638:2:9",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8625:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:9"
																				},
																				"nativeSrc": "8625:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8607:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:9"
																		},
																		"nativeSrc": "8607:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8663:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8669:3:9",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8660:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:9"
																				},
																				"nativeSrc": "8660:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8678:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8688:2:9",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8675:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:9"
																				},
																				"nativeSrc": "8675:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8656:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:9"
																		},
																		"nativeSrc": "8656:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8591:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:9"
																},
																"nativeSrc": "8591:111:9",
																"nodeType": "YulFunctionCall",
																"src": "8591:111:9"
															},
															"nativeSrc": "8588:246:9",
															"nodeType": "YulIf",
															"src": "8588:246:9"
														},
														{
															"nativeSrc": "8844:57:9",
															"nodeType": "YulAssignment",
															"src": "8844:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8878:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8881:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8887:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8897:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8859:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:9"
																},
																"nativeSrc": "8859:42:9",
																"nodeType": "YulFunctionCall",
																"src": "8859:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8844:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "8851:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8940:22:9",
																"nodeType": "YulBlock",
																"src": "8940:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8942:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:9"
																			},
																			"nativeSrc": "8942:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:9"
																		},
																		"nativeSrc": "8942:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8917:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8928:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8933:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8924:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:9"
																		},
																		"nativeSrc": "8924:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8914:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:9"
																},
																"nativeSrc": "8914:25:9",
																"nodeType": "YulFunctionCall",
																"src": "8914:25:9"
															},
															"nativeSrc": "8911:51:9",
															"nodeType": "YulIf",
															"src": "8911:51:9"
														},
														{
															"nativeSrc": "8971:25:9",
															"nodeType": "YulAssignment",
															"src": "8971:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8984:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8991:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8980:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:9"
																},
																"nativeSrc": "8980:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8980:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8971:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7929:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7959:4:9",
														"nodeType": "YulTypedName",
														"src": "7959:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7965:8:9",
														"nodeType": "YulTypedName",
														"src": "7965:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7975:3:9",
														"nodeType": "YulTypedName",
														"src": "7975:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7983:5:9",
														"nodeType": "YulTypedName",
														"src": "7983:5:9",
														"type": ""
													}
												],
												"src": "7929:1073:9"
											},
											{
												"body": {
													"nativeSrc": "9051:43:9",
													"nodeType": "YulBlock",
													"src": "9051:43:9",
													"statements": [
														{
															"nativeSrc": "9061:27:9",
															"nodeType": "YulAssignment",
															"src": "9061:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9076:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9072:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:9"
																},
																"nativeSrc": "9072:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9072:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9061:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9008:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9033:5:9",
														"nodeType": "YulTypedName",
														"src": "9033:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9043:7:9",
														"nodeType": "YulTypedName",
														"src": "9043:7:9",
														"type": ""
													}
												],
												"src": "9008:86:9"
											},
											{
												"body": {
													"nativeSrc": "9164:217:9",
													"nodeType": "YulBlock",
													"src": "9164:217:9",
													"statements": [
														{
															"nativeSrc": "9174:31:9",
															"nodeType": "YulAssignment",
															"src": "9174:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9200:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9182:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:9"
																},
																"nativeSrc": "9182:23:9",
																"nodeType": "YulFunctionCall",
																"src": "9182:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9174:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:9"
																}
															]
														},
														{
															"nativeSrc": "9214:37:9",
															"nodeType": "YulAssignment",
															"src": "9214:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9242:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9226:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:9"
																},
																"nativeSrc": "9226:25:9",
																"nodeType": "YulFunctionCall",
																"src": "9226:25:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9214:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:9"
																}
															]
														},
														{
															"nativeSrc": "9261:113:9",
															"nodeType": "YulAssignment",
															"src": "9261:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9291:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9297:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:66:9",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9270:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:9"
																},
																"nativeSrc": "9270:104:9",
																"nodeType": "YulFunctionCall",
																"src": "9270:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9261:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9100:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9139:4:9",
														"nodeType": "YulTypedName",
														"src": "9139:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9145:8:9",
														"nodeType": "YulTypedName",
														"src": "9145:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9158:5:9",
														"nodeType": "YulTypedName",
														"src": "9158:5:9",
														"type": ""
													}
												],
												"src": "9100:281:9"
											},
											{
												"body": {
													"nativeSrc": "9435:362:9",
													"nodeType": "YulBlock",
													"src": "9435:362:9",
													"statements": [
														{
															"nativeSrc": "9445:25:9",
															"nodeType": "YulAssignment",
															"src": "9445:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9468:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9450:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:9"
																},
																"nativeSrc": "9450:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9450:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9445:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:9"
																}
															]
														},
														{
															"nativeSrc": "9479:25:9",
															"nodeType": "YulAssignment",
															"src": "9479:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9502:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9484:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:9"
																},
																"nativeSrc": "9484:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9484:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9479:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:9"
																}
															]
														},
														{
															"nativeSrc": "9513:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9536:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9539:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9532:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:9"
																},
																"nativeSrc": "9532:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9532:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9517:11:9",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9550:41:9",
															"nodeType": "YulAssignment",
															"src": "9550:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9579:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9561:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:9"
																},
																"nativeSrc": "9561:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9550:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9768:22:9",
																"nodeType": "YulBlock",
																"src": "9768:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9770:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:9"
																			},
																			"nativeSrc": "9770:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:9"
																		},
																		"nativeSrc": "9770:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9701:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9694:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:9"
																				},
																				"nativeSrc": "9694:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9724:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9731:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9740:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9727:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:9"
																						},
																						"nativeSrc": "9727:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9721:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:9"
																				},
																				"nativeSrc": "9721:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9674:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:9"
																		},
																		"nativeSrc": "9674:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9654:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:9"
																},
																"nativeSrc": "9654:113:9",
																"nodeType": "YulFunctionCall",
																"src": "9654:113:9"
															},
															"nativeSrc": "9651:139:9",
															"nodeType": "YulIf",
															"src": "9651:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9387:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9418:1:9",
														"nodeType": "YulTypedName",
														"src": "9418:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9421:1:9",
														"nodeType": "YulTypedName",
														"src": "9421:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9427:7:9",
														"nodeType": "YulTypedName",
														"src": "9427:7:9",
														"type": ""
													}
												],
												"src": "9387:410:9"
											},
											{
												"body": {
													"nativeSrc": "9847:147:9",
													"nodeType": "YulBlock",
													"src": "9847:147:9",
													"statements": [
														{
															"nativeSrc": "9857:25:9",
															"nodeType": "YulAssignment",
															"src": "9857:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:9"
																},
																"nativeSrc": "9862:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:9"
																}
															]
														},
														{
															"nativeSrc": "9891:25:9",
															"nodeType": "YulAssignment",
															"src": "9891:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:9"
																},
																"nativeSrc": "9896:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:9"
																}
															]
														},
														{
															"nativeSrc": "9925:16:9",
															"nodeType": "YulAssignment",
															"src": "9925:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:9"
																},
																"nativeSrc": "9932:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:9",
																"nodeType": "YulBlock",
																"src": "9965:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:9"
																			},
																			"nativeSrc": "9967:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:9"
																		},
																		"nativeSrc": "9967:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:9"
																},
																"nativeSrc": "9954:10:9",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:9"
															},
															"nativeSrc": "9951:36:9",
															"nodeType": "YulIf",
															"src": "9951:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:9",
														"nodeType": "YulTypedName",
														"src": "9834:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:9",
														"nodeType": "YulTypedName",
														"src": "9837:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:9",
														"nodeType": "YulTypedName",
														"src": "9843:3:9",
														"type": ""
													}
												],
												"src": "9803:191:9"
											},
											{
												"body": {
													"nativeSrc": "10065:53:9",
													"nodeType": "YulBlock",
													"src": "10065:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:9"
																		},
																		"nativeSrc": "10087:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:9"
																},
																"nativeSrc": "10075:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:9"
															},
															"nativeSrc": "10075:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:9",
														"nodeType": "YulTypedName",
														"src": "10053:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:9",
														"nodeType": "YulTypedName",
														"src": "10060:3:9",
														"type": ""
													}
												],
												"src": "10000:118:9"
											},
											{
												"body": {
													"nativeSrc": "10278:288:9",
													"nodeType": "YulBlock",
													"src": "10278:288:9",
													"statements": [
														{
															"nativeSrc": "10288:26:9",
															"nodeType": "YulAssignment",
															"src": "10288:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:9"
																},
																"nativeSrc": "10296:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:9"
																		},
																		"nativeSrc": "10377:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:9"
																},
																"nativeSrc": "10324:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:9"
															},
															"nativeSrc": "10324:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:9"
																		},
																		"nativeSrc": "10458:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:9"
																},
																"nativeSrc": "10405:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:9"
															},
															"nativeSrc": "10405:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:9"
																		},
																		"nativeSrc": "10540:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:9"
																},
																"nativeSrc": "10487:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:9"
															},
															"nativeSrc": "10487:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:9",
														"nodeType": "YulTypedName",
														"src": "10234:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:9",
														"nodeType": "YulTypedName",
														"src": "10246:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:9",
														"nodeType": "YulTypedName",
														"src": "10254:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:9",
														"nodeType": "YulTypedName",
														"src": "10262:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:9",
														"nodeType": "YulTypedName",
														"src": "10273:4:9",
														"type": ""
													}
												],
												"src": "10124:442:9"
											},
											{
												"body": {
													"nativeSrc": "10670:124:9",
													"nodeType": "YulBlock",
													"src": "10670:124:9",
													"statements": [
														{
															"nativeSrc": "10680:26:9",
															"nodeType": "YulAssignment",
															"src": "10680:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:9"
																},
																"nativeSrc": "10688:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:9"
																		},
																		"nativeSrc": "10769:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:9"
																},
																"nativeSrc": "10716:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:9"
															},
															"nativeSrc": "10716:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:9",
														"nodeType": "YulTypedName",
														"src": "10642:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:9",
														"nodeType": "YulTypedName",
														"src": "10654:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:9",
														"nodeType": "YulTypedName",
														"src": "10665:4:9",
														"type": ""
													}
												],
												"src": "10572:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161213e38038061213e83398181016040528101906100319190610543565b806040518060400160405280600b81526020017f526577617264546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f525754000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906107a8565b5080600490816100bd91906107a8565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610886565b60405180910390fd5b61013f8161017c60201b60201c565b506101763361015261023f60201b60201c565b600a61015e9190610a07565b61271061016b9190610a51565b61024760201b60201c565b50610b22565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102b7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102ae9190610886565b60405180910390fd5b6102c85f83836102cc60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361031c578060025f8282546103109190610a92565b925050819055506103ea565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103a5578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161039c93929190610ad4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610431578060025f828254039250508190555061047b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104d89190610b09565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610512826104e9565b9050919050565b61052281610508565b811461052c575f80fd5b50565b5f8151905061053d81610519565b92915050565b5f60208284031215610558576105576104e5565b5b5f6105658482850161052f565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105e957607f821691505b6020821081036105fc576105fb6105a5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261065e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610623565b6106688683610623565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6106ac6106a76106a284610680565b610689565b610680565b9050919050565b5f819050919050565b6106c583610692565b6106d96106d1826106b3565b84845461062f565b825550505050565b5f90565b6106ed6106e1565b6106f88184846106bc565b505050565b5b8181101561071b576107105f826106e5565b6001810190506106fe565b5050565b601f8211156107605761073181610602565b61073a84610614565b81016020851015610749578190505b61075d61075585610614565b8301826106fd565b50505b505050565b5f82821c905092915050565b5f6107805f1984600802610765565b1980831691505092915050565b5f6107988383610771565b9150826002028217905092915050565b6107b18261056e565b67ffffffffffffffff8111156107ca576107c9610578565b5b6107d482546105d2565b6107df82828561071f565b5f60209050601f831160018114610810575f84156107fe578287015190505b610808858261078d565b86555061086f565b601f19841661081e86610602565b5f5b8281101561084557848901518255600182019150602085019450602081019050610820565b86831015610862578489015161085e601f891682610771565b8355505b6001600288020188555050505b505050505050565b61088081610508565b82525050565b5f6020820190506108995f830184610877565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610921578086048111156108fd576108fc61089f565b5b600185161561090c5780820291505b808102905061091a856108cc565b94506108e1565b94509492505050565b5f8261093957600190506109f4565b81610946575f90506109f4565b816001811461095c576002811461096657610995565b60019150506109f4565b60ff8411156109785761097761089f565b5b8360020a91508482111561098f5761098e61089f565b5b506109f4565b5060208310610133831016604e8410600b84101617156109ca5782820a9050838111156109c5576109c461089f565b5b6109f4565b6109d784848460016108d8565b925090508184048111156109ee576109ed61089f565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610a1182610680565b9150610a1c836109fb565b9250610a497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461092a565b905092915050565b5f610a5b82610680565b9150610a6683610680565b9250828202610a7481610680565b91508282048414831517610a8b57610a8a61089f565b5b5092915050565b5f610a9c82610680565b9150610aa783610680565b9250828201905080821115610abf57610abe61089f565b5b92915050565b610ace81610680565b82525050565b5f606082019050610ae75f830186610877565b610af46020830185610ac5565b610b016040830184610ac5565b949350505050565b5f602082019050610b1c5f830184610ac5565b92915050565b61160f80610b2f5f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063a0712d6811610064578063a0712d6814610238578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b80638da5cb5b146101e057806395d89b41146101fe5780639a49090e1461021c576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806370a08231146101a6578063715018a6146101d6576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102d0565b6040516101019190610f6b565b60405180910390f35b610124600480360381019061011f919061101c565b610360565b6040516101319190611074565b60405180910390f35b610142610382565b60405161014f919061109c565b60405180910390f35b610172600480360381019061016d91906110b5565b61038b565b60405161017f9190611074565b60405180910390f35b6101906103b9565b60405161019d9190611120565b60405180910390f35b6101c060048036038101906101bb9190611139565b6103c1565b6040516101cd919061109c565b60405180910390f35b6101de610406565b005b6101e8610419565b6040516101f59190611173565b60405180910390f35b610206610441565b6040516102139190610f6b565b60405180910390f35b6102366004803603810190610231919061101c565b6104d1565b005b610252600480360381019061024d919061118c565b61062d565b005b61026e6004803603810190610269919061101c565b610686565b60405161027b9190611074565b60405180910390f35b61029e600480360381019061029991906111b7565b6106a8565b6040516102ab919061109c565b60405180910390f35b6102ce60048036038101906102c99190611139565b61072a565b005b6060600380546102df90611222565b80601f016020809104026020016040519081016040528092919081815260200182805461030b90611222565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f8061036a6107ae565b90506103778185856107b5565b600191505092915050565b5f600254905090565b5f806103956107ae565b90506103a28582856107c7565b6103ad85858561085a565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61040e61094a565b6104175f6109d1565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461045090611222565b80601f016020809104026020016040519081016040528092919081815260200182805461047c90611222565b80156104c75780601f1061049e576101008083540402835291602001916104c7565b820191905f5260205f20905b8154815290600101906020018083116104aa57829003601f168201915b5050505050905090565b42603c6006546104e1919061127f565b1115610522576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610519906112fc565b60405180910390fd5b61052a6103b9565b600a6105369190611449565b60646105429190611493565b61054a6103b9565b600a6105569190611449565b826105619190611493565b11156105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061151e565b60405180910390fd5b6105aa6103b9565b600a6105b69190611449565b620f42406105c49190611493565b816105cd610382565b6105d7919061127f565b1115610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90611586565b60405180910390fd5b6106228282610a94565b426006819055505050565b61063561094a565b6064811115610679576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106709061151e565b60405180910390fd5b6106833382610a94565b50565b5f806106906107ae565b905061069d81858561085a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61073261094a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107999190611173565b60405180910390fd5b6107ab816109d1565b50565b5f33905090565b6107c28383836001610b13565b505050565b5f6107d284846106a8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108545781811015610845578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083c939291906115a4565b60405180910390fd5b61085384848484035f610b13565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108ca575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108c19190611173565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361093a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109319190611173565b60405180910390fd5b610945838383610ce2565b505050565b6109526107ae565b73ffffffffffffffffffffffffffffffffffffffff16610970610419565b73ffffffffffffffffffffffffffffffffffffffff16146109cf576109936107ae565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109c69190611173565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b04575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610afb9190611173565b60405180910390fd5b610b0f5f8383610ce2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b83575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b7a9190611173565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bea9190611173565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cdc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cd3919061109c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d32578060025f828254610d26919061127f565b92505081905550610e00565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610dbb578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610db2939291906115a4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e47578060025f8282540392505081905550610e91565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eee919061109c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f3d82610efb565b610f478185610f05565b9350610f57818560208601610f15565b610f6081610f23565b840191505092915050565b5f6020820190508181035f830152610f838184610f33565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fb882610f8f565b9050919050565b610fc881610fae565b8114610fd2575f80fd5b50565b5f81359050610fe381610fbf565b92915050565b5f819050919050565b610ffb81610fe9565b8114611005575f80fd5b50565b5f8135905061101681610ff2565b92915050565b5f806040838503121561103257611031610f8b565b5b5f61103f85828601610fd5565b925050602061105085828601611008565b9150509250929050565b5f8115159050919050565b61106e8161105a565b82525050565b5f6020820190506110875f830184611065565b92915050565b61109681610fe9565b82525050565b5f6020820190506110af5f83018461108d565b92915050565b5f805f606084860312156110cc576110cb610f8b565b5b5f6110d986828701610fd5565b93505060206110ea86828701610fd5565b92505060406110fb86828701611008565b9150509250925092565b5f60ff82169050919050565b61111a81611105565b82525050565b5f6020820190506111335f830184611111565b92915050565b5f6020828403121561114e5761114d610f8b565b5b5f61115b84828501610fd5565b91505092915050565b61116d81610fae565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f602082840312156111a1576111a0610f8b565b5b5f6111ae84828501611008565b91505092915050565b5f80604083850312156111cd576111cc610f8b565b5b5f6111da85828601610fd5565b92505060206111eb85828601610fd5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061123957607f821691505b60208210810361124c5761124b6111f5565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61128982610fe9565b915061129483610fe9565b92508282019050808211156112ac576112ab611252565b5b92915050565b7f776169742031206d696e75746520666f722065616368206d696e7400000000005f82015250565b5f6112e6601b83610f05565b91506112f1826112b2565b602082019050919050565b5f6020820190508181035f830152611313816112da565b9050919050565b5f8160011c9050919050565b5f808291508390505b600185111561136f5780860481111561134b5761134a611252565b5b600185161561135a5780820291505b80810290506113688561131a565b945061132f565b94509492505050565b5f826113875760019050611442565b81611394575f9050611442565b81600181146113aa57600281146113b4576113e3565b6001915050611442565b60ff8411156113c6576113c5611252565b5b8360020a9150848211156113dd576113dc611252565b5b50611442565b5060208310610133831016604e8410600b84101617156114185782820a90508381111561141357611412611252565b5b611442565b6114258484846001611326565b9250905081840481111561143c5761143b611252565b5b81810290505b9392505050565b5f61145382610fe9565b915061145e83611105565b925061148b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611378565b905092915050565b5f61149d82610fe9565b91506114a883610fe9565b92508282026114b681610fe9565b915082820484148315176114cd576114cc611252565b5b5092915050565b7f4d6178696d756d206d696e7420616d6f756e74206973203130300000000000005f82015250565b5f611508601a83610f05565b9150611513826114d4565b602082019050919050565b5f6020820190508181035f830152611535816114fc565b9050919050565b7f546f74616c737570706c792065786365656400000000000000000000000000005f82015250565b5f611570601283610f05565b915061157b8261153c565b602082019050919050565b5f6020820190508181035f83015261159d81611564565b9050919050565b5f6060820190506115b75f830186611164565b6115c4602083018561108d565b6115d1604083018461108d565b94935050505056fea264697066735822122095fb092d7fd56e535a3367c094f92e59725c515f1b6de35f2a7c7dc4bbe4f85164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x213E CODESIZE SUB DUP1 PUSH2 0x213E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x526577617264546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5257540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x17C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x176 CALLER PUSH2 0x152 PUSH2 0x23F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x247 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xB22 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C8 PUSH0 DUP4 DUP4 PUSH2 0x2CC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3EA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x431 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x47B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x512 DUP3 PUSH2 0x4E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x508 JUMP JUMPDEST DUP2 EQ PUSH2 0x52C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x53D DUP2 PUSH2 0x519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x4E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x565 DUP5 DUP3 DUP6 ADD PUSH2 0x52F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5E9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5FC JUMPI PUSH2 0x5FB PUSH2 0x5A5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x65E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x668 DUP7 DUP4 PUSH2 0x623 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AC PUSH2 0x6A7 PUSH2 0x6A2 DUP5 PUSH2 0x680 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 DUP4 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0x6D1 DUP3 PUSH2 0x6B3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x62F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6ED PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x6F8 DUP2 DUP5 DUP5 PUSH2 0x6BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x71B JUMPI PUSH2 0x710 PUSH0 DUP3 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x731 DUP2 PUSH2 0x602 JUMP JUMPDEST PUSH2 0x73A DUP5 PUSH2 0x614 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x749 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x75D PUSH2 0x755 DUP6 PUSH2 0x614 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6FD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x780 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x765 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x798 DUP4 DUP4 PUSH2 0x771 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x578 JUMP JUMPDEST JUMPDEST PUSH2 0x7D4 DUP3 SLOAD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x7DF DUP3 DUP3 DUP6 PUSH2 0x71F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x810 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7FE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x808 DUP6 DUP3 PUSH2 0x78D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x81E DUP7 PUSH2 0x602 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x845 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x820 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x862 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x85E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x771 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x880 DUP2 PUSH2 0x508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x899 PUSH0 DUP4 ADD DUP5 PUSH2 0x877 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x921 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FC PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x90C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x91A DUP6 PUSH2 0x8CC JUMP JUMPDEST SWAP5 POP PUSH2 0x8E1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x939 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9F4 JUMP JUMPDEST DUP2 PUSH2 0x946 JUMPI PUSH0 SWAP1 POP PUSH2 0x9F4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x95C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x966 JUMPI PUSH2 0x995 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x978 JUMPI PUSH2 0x977 PUSH2 0x89F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0x89F JUMP JUMPDEST JUMPDEST POP PUSH2 0x9F4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9CA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x9C4 PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x9D7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x8D8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x89F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA11 DUP3 PUSH2 0x680 JUMP JUMPDEST SWAP2 POP PUSH2 0xA1C DUP4 PUSH2 0x9FB JUMP JUMPDEST SWAP3 POP PUSH2 0xA49 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x92A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA5B DUP3 PUSH2 0x680 JUMP JUMPDEST SWAP2 POP PUSH2 0xA66 DUP4 PUSH2 0x680 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA74 DUP2 PUSH2 0x680 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0x89F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA9C DUP3 PUSH2 0x680 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA7 DUP4 PUSH2 0x680 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xABF JUMPI PUSH2 0xABE PUSH2 0x89F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACE DUP2 PUSH2 0x680 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAE7 PUSH0 DUP4 ADD DUP7 PUSH2 0x877 JUMP JUMPDEST PUSH2 0xAF4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0xB01 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1C PUSH0 DUP4 ADD DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x160F DUP1 PUSH2 0xB2F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x9A49090E EQ PUSH2 0x21C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36A PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x395 PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E PUSH2 0x94A JUMP JUMPDEST PUSH2 0x417 PUSH0 PUSH2 0x9D1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x3C PUSH1 0x6 SLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST GT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x519 SWAP1 PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52A PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x54A PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP3 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST GT ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5AA PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST DUP2 PUSH2 0x5CD PUSH2 0x382 JUMP JUMPDEST PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST GT ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 DUP3 DUP3 PUSH2 0xA94 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x635 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x683 CALLER DUP3 PUSH2 0xA94 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x690 PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP PUSH2 0x69D DUP2 DUP6 DUP6 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x732 PUSH2 0x94A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x9D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D2 DUP5 DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x854 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x845 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x853 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB13 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x945 DUP4 DUP4 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x952 PUSH2 0x7AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x970 PUSH2 0x419 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CF JUMPI PUSH2 0x993 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0F PUSH0 DUP4 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB83 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCDC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD32 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD26 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE00 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDBB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE47 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE91 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF3D DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xF47 DUP2 DUP6 PUSH2 0xF05 JUMP JUMPDEST SWAP4 POP PUSH2 0xF57 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF15 JUMP JUMPDEST PUSH2 0xF60 DUP2 PUSH2 0xF23 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF83 DUP2 DUP5 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB8 DUP3 PUSH2 0xF8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE3 DUP2 PUSH2 0xFBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFB DUP2 PUSH2 0xFE9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1005 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1016 DUP2 PUSH2 0xFF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x103F DUP6 DUP3 DUP7 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0x1008 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x105A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1087 PUSH0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1096 DUP2 PUSH2 0xFE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AF PUSH0 DUP4 ADD DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CB PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D9 DUP7 DUP3 DUP8 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10EA DUP7 DUP3 DUP8 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10FB DUP7 DUP3 DUP8 ADD PUSH2 0x1008 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111A DUP2 PUSH2 0x1105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1133 PUSH0 DUP4 ADD DUP5 PUSH2 0x1111 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114E JUMPI PUSH2 0x114D PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x115B DUP5 DUP3 DUP6 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x116D DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1186 PUSH0 DUP4 ADD DUP5 PUSH2 0x1164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A0 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AE DUP5 DUP3 DUP6 ADD PUSH2 0x1008 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11DA DUP6 DUP3 DUP7 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11EB DUP6 DUP3 DUP7 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1239 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x11F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1289 DUP3 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1294 DUP4 PUSH2 0xFE9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AB PUSH2 0x1252 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776169742031206D696E75746520666F722065616368206D696E740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12E6 PUSH1 0x1B DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F1 DUP3 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1313 DUP2 PUSH2 0x12DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x136F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x1252 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x135A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1368 DUP6 PUSH2 0x131A JUMP JUMPDEST SWAP5 POP PUSH2 0x132F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1387 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1442 JUMP JUMPDEST DUP2 PUSH2 0x1394 JUMPI PUSH0 SWAP1 POP PUSH2 0x1442 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x13AA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1442 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x13C6 JUMPI PUSH2 0x13C5 PUSH2 0x1252 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x13DD JUMPI PUSH2 0x13DC PUSH2 0x1252 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1442 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1418 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1413 JUMPI PUSH2 0x1412 PUSH2 0x1252 JUMP JUMPDEST JUMPDEST PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x1425 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1326 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x143C JUMPI PUSH2 0x143B PUSH2 0x1252 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1453 DUP3 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x145E DUP4 PUSH2 0x1105 JUMP JUMPDEST SWAP3 POP PUSH2 0x148B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x149D DUP3 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A8 DUP4 PUSH2 0xFE9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14B6 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1252 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6178696D756D206D696E7420616D6F756E7420697320313030000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1508 PUSH1 0x1A DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1513 DUP3 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1535 DUP2 PUSH2 0x14FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C737570706C79206578636565640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1570 PUSH1 0x12 DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP3 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159D DUP2 PUSH2 0x1564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x15C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x15D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB MULMOD 0x2D PUSH32 0xD56E535A3367C094F92E59725C515F1B6DE35F2A7C7DC4BBE4F85164736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "250:800:8:-:0;;;325:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;394:12;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;418:43:8::2;424:10;450;:8;;;:10;;:::i;:::-;444:2;:16;;;;:::i;:::-;436:5;:24;;;;:::i;:::-;418:5;;;:43;;:::i;:::-;325:144:::0;250:800;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;250:800:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1973,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2835,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2378,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2708,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_949": {
									"entryPoint": 1966,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1991,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2513,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2138,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3298,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1704,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 864,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 961,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 953,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintReward_1191": {
									"entryPoint": 1233,
									"id": 1191,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_1131": {
									"entryPoint": 1581,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 720,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1049,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1030,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1089,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 898,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 907,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1834,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1670,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12": {
									"entryPoint": 4786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13262:9",
										"nodeType": "YulBlock",
										"src": "0:13262:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3791:519:9",
													"nodeType": "YulBlock",
													"src": "3791:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:9",
																"nodeType": "YulBlock",
																"src": "3837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:9"
																			},
																			"nativeSrc": "3839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:9"
																		},
																		"nativeSrc": "3839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:9"
																},
																"nativeSrc": "3804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:9"
															},
															"nativeSrc": "3801:119:9",
															"nodeType": "YulIf",
															"src": "3801:119:9"
														},
														{
															"nativeSrc": "3930:117:9",
															"nodeType": "YulBlock",
															"src": "3930:117:9",
															"statements": [
																{
																	"nativeSrc": "3945:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:9"
																				},
																				"nativeSrc": "4005:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:9"
																		},
																		"nativeSrc": "3984:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:9",
															"nodeType": "YulBlock",
															"src": "4057:118:9",
															"statements": [
																{
																	"nativeSrc": "4072:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:9"
																				},
																				"nativeSrc": "4133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:9"
																		},
																		"nativeSrc": "4112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:9",
															"nodeType": "YulBlock",
															"src": "4185:118:9",
															"statements": [
																{
																	"nativeSrc": "4200:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:9"
																				},
																				"nativeSrc": "4261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:9"
																		},
																		"nativeSrc": "4240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:9",
														"nodeType": "YulTypedName",
														"src": "3745:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:9",
														"nodeType": "YulTypedName",
														"src": "3756:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:9",
														"nodeType": "YulTypedName",
														"src": "3768:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:9",
														"nodeType": "YulTypedName",
														"src": "3776:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:9",
														"nodeType": "YulTypedName",
														"src": "3784:6:9",
														"type": ""
													}
												],
												"src": "3691:619:9"
											},
											{
												"body": {
													"nativeSrc": "4359:43:9",
													"nodeType": "YulBlock",
													"src": "4359:43:9",
													"statements": [
														{
															"nativeSrc": "4369:27:9",
															"nodeType": "YulAssignment",
															"src": "4369:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:9"
																},
																"nativeSrc": "4380:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:9",
														"nodeType": "YulTypedName",
														"src": "4341:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:9",
														"nodeType": "YulTypedName",
														"src": "4351:7:9",
														"type": ""
													}
												],
												"src": "4316:86:9"
											},
											{
												"body": {
													"nativeSrc": "4469:51:9",
													"nodeType": "YulBlock",
													"src": "4469:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:9"
																		},
																		"nativeSrc": "4491:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:9"
																},
																"nativeSrc": "4479:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:9"
															},
															"nativeSrc": "4479:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:9",
														"nodeType": "YulTypedName",
														"src": "4457:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:9",
														"nodeType": "YulTypedName",
														"src": "4464:3:9",
														"type": ""
													}
												],
												"src": "4408:112:9"
											},
											{
												"body": {
													"nativeSrc": "4620:120:9",
													"nodeType": "YulBlock",
													"src": "4620:120:9",
													"statements": [
														{
															"nativeSrc": "4630:26:9",
															"nodeType": "YulAssignment",
															"src": "4630:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:9"
																},
																"nativeSrc": "4638:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:9"
																		},
																		"nativeSrc": "4715:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:9"
																},
																"nativeSrc": "4666:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:9"
															},
															"nativeSrc": "4666:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:9",
														"nodeType": "YulTypedName",
														"src": "4592:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:9",
														"nodeType": "YulTypedName",
														"src": "4604:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:9",
														"nodeType": "YulTypedName",
														"src": "4615:4:9",
														"type": ""
													}
												],
												"src": "4526:214:9"
											},
											{
												"body": {
													"nativeSrc": "4812:263:9",
													"nodeType": "YulBlock",
													"src": "4812:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:9",
																"nodeType": "YulBlock",
																"src": "4858:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:9"
																			},
																			"nativeSrc": "4860:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:9"
																		},
																		"nativeSrc": "4860:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:9"
																		},
																		"nativeSrc": "4829:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:9"
																},
																"nativeSrc": "4825:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:9"
															},
															"nativeSrc": "4822:119:9",
															"nodeType": "YulIf",
															"src": "4822:119:9"
														},
														{
															"nativeSrc": "4951:117:9",
															"nodeType": "YulBlock",
															"src": "4951:117:9",
															"statements": [
																{
																	"nativeSrc": "4966:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:9"
																				},
																				"nativeSrc": "5026:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:9"
																		},
																		"nativeSrc": "5005:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:9",
														"nodeType": "YulTypedName",
														"src": "4782:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:9",
														"nodeType": "YulTypedName",
														"src": "4793:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:9",
														"nodeType": "YulTypedName",
														"src": "4805:6:9",
														"type": ""
													}
												],
												"src": "4746:329:9"
											},
											{
												"body": {
													"nativeSrc": "5146:53:9",
													"nodeType": "YulBlock",
													"src": "5146:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:9"
																		},
																		"nativeSrc": "5168:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:9"
																},
																"nativeSrc": "5156:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:9"
															},
															"nativeSrc": "5156:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:9",
														"nodeType": "YulTypedName",
														"src": "5134:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:9",
														"nodeType": "YulTypedName",
														"src": "5141:3:9",
														"type": ""
													}
												],
												"src": "5081:118:9"
											},
											{
												"body": {
													"nativeSrc": "5303:124:9",
													"nodeType": "YulBlock",
													"src": "5303:124:9",
													"statements": [
														{
															"nativeSrc": "5313:26:9",
															"nodeType": "YulAssignment",
															"src": "5313:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:9"
																},
																"nativeSrc": "5321:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:9"
																		},
																		"nativeSrc": "5402:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:9"
																},
																"nativeSrc": "5349:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:9"
															},
															"nativeSrc": "5349:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:9",
														"nodeType": "YulTypedName",
														"src": "5275:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:9",
														"nodeType": "YulTypedName",
														"src": "5287:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:9",
														"nodeType": "YulTypedName",
														"src": "5298:4:9",
														"type": ""
													}
												],
												"src": "5205:222:9"
											},
											{
												"body": {
													"nativeSrc": "5499:263:9",
													"nodeType": "YulBlock",
													"src": "5499:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:9",
																"nodeType": "YulBlock",
																"src": "5545:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:9"
																			},
																			"nativeSrc": "5547:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:9"
																		},
																		"nativeSrc": "5547:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:9"
																		},
																		"nativeSrc": "5516:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:9"
																},
																"nativeSrc": "5512:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:9"
															},
															"nativeSrc": "5509:119:9",
															"nodeType": "YulIf",
															"src": "5509:119:9"
														},
														{
															"nativeSrc": "5638:117:9",
															"nodeType": "YulBlock",
															"src": "5638:117:9",
															"statements": [
																{
																	"nativeSrc": "5653:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:9"
																				},
																				"nativeSrc": "5713:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:9"
																		},
																		"nativeSrc": "5692:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:9",
														"nodeType": "YulTypedName",
														"src": "5469:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:9",
														"nodeType": "YulTypedName",
														"src": "5480:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:9",
														"nodeType": "YulTypedName",
														"src": "5492:6:9",
														"type": ""
													}
												],
												"src": "5433:329:9"
											},
											{
												"body": {
													"nativeSrc": "5851:391:9",
													"nodeType": "YulBlock",
													"src": "5851:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:9",
																"nodeType": "YulBlock",
																"src": "5897:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:9"
																			},
																			"nativeSrc": "5899:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:9"
																		},
																		"nativeSrc": "5899:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:9"
																		},
																		"nativeSrc": "5868:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:9"
																},
																"nativeSrc": "5864:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:9"
															},
															"nativeSrc": "5861:119:9",
															"nodeType": "YulIf",
															"src": "5861:119:9"
														},
														{
															"nativeSrc": "5990:117:9",
															"nodeType": "YulBlock",
															"src": "5990:117:9",
															"statements": [
																{
																	"nativeSrc": "6005:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:9"
																				},
																				"nativeSrc": "6065:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:9"
																		},
																		"nativeSrc": "6044:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:9",
															"nodeType": "YulBlock",
															"src": "6117:118:9",
															"statements": [
																{
																	"nativeSrc": "6132:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:9"
																				},
																				"nativeSrc": "6193:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:9"
																		},
																		"nativeSrc": "6172:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:9",
														"nodeType": "YulTypedName",
														"src": "5813:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:9",
														"nodeType": "YulTypedName",
														"src": "5824:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:9",
														"nodeType": "YulTypedName",
														"src": "5836:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:9",
														"nodeType": "YulTypedName",
														"src": "5844:6:9",
														"type": ""
													}
												],
												"src": "5768:474:9"
											},
											{
												"body": {
													"nativeSrc": "6276:152:9",
													"nodeType": "YulBlock",
													"src": "6276:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:9"
																},
																"nativeSrc": "6286:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:9"
															},
															"nativeSrc": "6286:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:9"
																},
																"nativeSrc": "6383:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:9"
															},
															"nativeSrc": "6383:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:9"
																},
																"nativeSrc": "6407:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:9"
															},
															"nativeSrc": "6407:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:9"
											},
											{
												"body": {
													"nativeSrc": "6485:269:9",
													"nodeType": "YulBlock",
													"src": "6485:269:9",
													"statements": [
														{
															"nativeSrc": "6495:22:9",
															"nodeType": "YulAssignment",
															"src": "6495:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:9"
																},
																"nativeSrc": "6505:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:9"
																}
															]
														},
														{
															"nativeSrc": "6526:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:9"
																},
																"nativeSrc": "6552:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:9",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:9",
																"nodeType": "YulBlock",
																"src": "6603:51:9",
																"statements": [
																	{
																		"nativeSrc": "6617:27:9",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:9"
																			},
																			"nativeSrc": "6627:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:9"
																},
																"nativeSrc": "6576:26:9",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:9"
															},
															"nativeSrc": "6573:81:9",
															"nodeType": "YulIf",
															"src": "6573:81:9"
														},
														{
															"body": {
																"nativeSrc": "6706:42:9",
																"nodeType": "YulBlock",
																"src": "6706:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:9"
																			},
																			"nativeSrc": "6720:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:9"
																		},
																		"nativeSrc": "6720:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:9"
																		},
																		"nativeSrc": "6690:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:9"
																},
																"nativeSrc": "6667:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:9"
															},
															"nativeSrc": "6664:84:9",
															"nodeType": "YulIf",
															"src": "6664:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:9",
														"nodeType": "YulTypedName",
														"src": "6469:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:9",
														"nodeType": "YulTypedName",
														"src": "6478:6:9",
														"type": ""
													}
												],
												"src": "6434:320:9"
											},
											{
												"body": {
													"nativeSrc": "6788:152:9",
													"nodeType": "YulBlock",
													"src": "6788:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6805:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6805:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6808:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6808:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:9"
																},
																"nativeSrc": "6798:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6798:88:9"
															},
															"nativeSrc": "6798:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6798:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6902:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6902:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6905:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6905:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6895:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:9"
																},
																"nativeSrc": "6895:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6895:15:9"
															},
															"nativeSrc": "6895:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6895:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6926:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6926:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6929:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6929:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6919:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:9"
																},
																"nativeSrc": "6919:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6919:15:9"
															},
															"nativeSrc": "6919:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6919:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6760:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6760:180:9"
											},
											{
												"body": {
													"nativeSrc": "6990:147:9",
													"nodeType": "YulBlock",
													"src": "6990:147:9",
													"statements": [
														{
															"nativeSrc": "7000:25:9",
															"nodeType": "YulAssignment",
															"src": "7000:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7023:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7023:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7005:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7005:17:9"
																},
																"nativeSrc": "7005:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7005:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7000:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7000:1:9"
																}
															]
														},
														{
															"nativeSrc": "7034:25:9",
															"nodeType": "YulAssignment",
															"src": "7034:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7057:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7057:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7039:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7039:17:9"
																},
																"nativeSrc": "7039:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7039:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7034:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7034:1:9"
																}
															]
														},
														{
															"nativeSrc": "7068:16:9",
															"nodeType": "YulAssignment",
															"src": "7068:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7079:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7079:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7082:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7082:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7075:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7075:3:9"
																},
																"nativeSrc": "7075:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7075:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7068:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7068:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7108:22:9",
																"nodeType": "YulBlock",
																"src": "7108:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7110:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7110:16:9"
																			},
																			"nativeSrc": "7110:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7110:18:9"
																		},
																		"nativeSrc": "7110:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7110:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7103:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7103:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7097:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7097:2:9"
																},
																"nativeSrc": "7097:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7097:10:9"
															},
															"nativeSrc": "7094:36:9",
															"nodeType": "YulIf",
															"src": "7094:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6946:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6977:1:9",
														"nodeType": "YulTypedName",
														"src": "6977:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6980:1:9",
														"nodeType": "YulTypedName",
														"src": "6980:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6986:3:9",
														"nodeType": "YulTypedName",
														"src": "6986:3:9",
														"type": ""
													}
												],
												"src": "6946:191:9"
											},
											{
												"body": {
													"nativeSrc": "7249:71:9",
													"nodeType": "YulBlock",
													"src": "7249:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7271:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7271:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7279:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7279:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7267:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:9"
																		},
																		"nativeSrc": "7267:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7267:14:9"
																	},
																	{
																		"hexValue": "776169742031206d696e75746520666f722065616368206d696e74",
																		"kind": "string",
																		"nativeSrc": "7283:29:9",
																		"nodeType": "YulLiteral",
																		"src": "7283:29:9",
																		"type": "",
																		"value": "wait 1 minute for each mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7260:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7260:6:9"
																},
																"nativeSrc": "7260:53:9",
																"nodeType": "YulFunctionCall",
																"src": "7260:53:9"
															},
															"nativeSrc": "7260:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "7260:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12",
												"nativeSrc": "7143:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7241:6:9",
														"nodeType": "YulTypedName",
														"src": "7241:6:9",
														"type": ""
													}
												],
												"src": "7143:177:9"
											},
											{
												"body": {
													"nativeSrc": "7472:220:9",
													"nodeType": "YulBlock",
													"src": "7472:220:9",
													"statements": [
														{
															"nativeSrc": "7482:74:9",
															"nodeType": "YulAssignment",
															"src": "7482:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7548:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7548:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7553:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7553:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7489:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7489:58:9"
																},
																"nativeSrc": "7489:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7489:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7482:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7482:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7654:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7654:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12",
																	"nativeSrc": "7565:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7565:88:9"
																},
																"nativeSrc": "7565:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7565:93:9"
															},
															"nativeSrc": "7565:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7565:93:9"
														},
														{
															"nativeSrc": "7667:19:9",
															"nodeType": "YulAssignment",
															"src": "7667:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7678:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7678:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7683:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7683:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7674:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7674:3:9"
																},
																"nativeSrc": "7674:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7674:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7667:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7667:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7326:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7460:3:9",
														"nodeType": "YulTypedName",
														"src": "7460:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7468:3:9",
														"nodeType": "YulTypedName",
														"src": "7468:3:9",
														"type": ""
													}
												],
												"src": "7326:366:9"
											},
											{
												"body": {
													"nativeSrc": "7869:248:9",
													"nodeType": "YulBlock",
													"src": "7869:248:9",
													"statements": [
														{
															"nativeSrc": "7879:26:9",
															"nodeType": "YulAssignment",
															"src": "7879:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7891:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7891:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7902:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7887:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:9"
																},
																"nativeSrc": "7887:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7887:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7879:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7879:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7926:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7926:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7937:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7937:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7922:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7922:3:9"
																		},
																		"nativeSrc": "7922:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7922:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7945:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7945:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7951:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7941:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7941:3:9"
																		},
																		"nativeSrc": "7941:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7941:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7915:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7915:6:9"
																},
																"nativeSrc": "7915:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7915:47:9"
															},
															"nativeSrc": "7915:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7915:47:9"
														},
														{
															"nativeSrc": "7971:139:9",
															"nodeType": "YulAssignment",
															"src": "7971:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8105:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8105:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7979:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7979:124:9"
																},
																"nativeSrc": "7979:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7979:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7971:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7971:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7698:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7849:9:9",
														"nodeType": "YulTypedName",
														"src": "7849:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7864:4:9",
														"nodeType": "YulTypedName",
														"src": "7864:4:9",
														"type": ""
													}
												],
												"src": "7698:419:9"
											},
											{
												"body": {
													"nativeSrc": "8174:51:9",
													"nodeType": "YulBlock",
													"src": "8174:51:9",
													"statements": [
														{
															"nativeSrc": "8184:34:9",
															"nodeType": "YulAssignment",
															"src": "8184:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8209:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8209:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8212:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8212:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8205:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8205:3:9"
																},
																"nativeSrc": "8205:13:9",
																"nodeType": "YulFunctionCall",
																"src": "8205:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8184:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "8184:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8123:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8155:5:9",
														"nodeType": "YulTypedName",
														"src": "8155:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8165:8:9",
														"nodeType": "YulTypedName",
														"src": "8165:8:9",
														"type": ""
													}
												],
												"src": "8123:102:9"
											},
											{
												"body": {
													"nativeSrc": "8304:775:9",
													"nodeType": "YulBlock",
													"src": "8304:775:9",
													"statements": [
														{
															"nativeSrc": "8314:15:9",
															"nodeType": "YulAssignment",
															"src": "8314:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "8323:6:9",
																"nodeType": "YulIdentifier",
																"src": "8323:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8314:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8314:5:9"
																}
															]
														},
														{
															"nativeSrc": "8338:14:9",
															"nodeType": "YulAssignment",
															"src": "8338:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "8347:5:9",
																"nodeType": "YulIdentifier",
																"src": "8347:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8338:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8338:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8396:677:9",
																"nodeType": "YulBlock",
																"src": "8396:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8484:22:9",
																			"nodeType": "YulBlock",
																			"src": "8484:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8486:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "8486:16:9"
																						},
																						"nativeSrc": "8486:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "8486:18:9"
																					},
																					"nativeSrc": "8486:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "8486:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8462:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "8462:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8472:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "8472:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8477:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8477:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8468:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8468:3:9"
																					},
																					"nativeSrc": "8468:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8468:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8459:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "8459:2:9"
																			},
																			"nativeSrc": "8459:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8459:24:9"
																		},
																		"nativeSrc": "8456:50:9",
																		"nodeType": "YulIf",
																		"src": "8456:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "8551:419:9",
																			"nodeType": "YulBlock",
																			"src": "8551:419:9",
																			"statements": [
																				{
																					"nativeSrc": "8931:25:9",
																					"nodeType": "YulAssignment",
																					"src": "8931:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8944:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "8944:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8951:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "8951:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8940:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "8940:3:9"
																						},
																						"nativeSrc": "8940:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "8940:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8931:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "8931:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8526:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "8526:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8536:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8536:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8522:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8522:3:9"
																			},
																			"nativeSrc": "8522:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8522:16:9"
																		},
																		"nativeSrc": "8519:451:9",
																		"nodeType": "YulIf",
																		"src": "8519:451:9"
																	},
																	{
																		"nativeSrc": "8983:23:9",
																		"nodeType": "YulAssignment",
																		"src": "8983:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8995:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "8995:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9001:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "9001:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8991:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8991:3:9"
																			},
																			"nativeSrc": "8991:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8991:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8983:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8983:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9019:44:9",
																		"nodeType": "YulAssignment",
																		"src": "9019:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9054:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "9054:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9031:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "9031:22:9"
																			},
																			"nativeSrc": "9031:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9019:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "9019:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8372:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "8372:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8382:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8382:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8369:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8369:2:9"
																},
																"nativeSrc": "8369:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8369:15:9"
															},
															"nativeSrc": "8361:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8385:2:9",
																"nodeType": "YulBlock",
																"src": "8385:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8365:3:9",
																"nodeType": "YulBlock",
																"src": "8365:3:9",
																"statements": []
															},
															"src": "8361:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8231:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8259:6:9",
														"nodeType": "YulTypedName",
														"src": "8259:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8267:5:9",
														"nodeType": "YulTypedName",
														"src": "8267:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8274:8:9",
														"nodeType": "YulTypedName",
														"src": "8274:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8284:3:9",
														"nodeType": "YulTypedName",
														"src": "8284:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8292:5:9",
														"nodeType": "YulTypedName",
														"src": "8292:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8299:4:9",
														"nodeType": "YulTypedName",
														"src": "8299:4:9",
														"type": ""
													}
												],
												"src": "8231:848:9"
											},
											{
												"body": {
													"nativeSrc": "9145:1013:9",
													"nodeType": "YulBlock",
													"src": "9145:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9340:20:9",
																"nodeType": "YulBlock",
																"src": "9340:20:9",
																"statements": [
																	{
																		"nativeSrc": "9342:10:9",
																		"nodeType": "YulAssignment",
																		"src": "9342:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9351:1:9",
																			"nodeType": "YulLiteral",
																			"src": "9351:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9342:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9342:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9353:5:9",
																		"nodeType": "YulLeave",
																		"src": "9353:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9330:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "9330:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9323:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9323:6:9"
																},
																"nativeSrc": "9323:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9323:16:9"
															},
															"nativeSrc": "9320:40:9",
															"nodeType": "YulIf",
															"src": "9320:40:9"
														},
														{
															"body": {
																"nativeSrc": "9385:20:9",
																"nodeType": "YulBlock",
																"src": "9385:20:9",
																"statements": [
																	{
																		"nativeSrc": "9387:10:9",
																		"nodeType": "YulAssignment",
																		"src": "9387:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9396:1:9",
																			"nodeType": "YulLiteral",
																			"src": "9396:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9387:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9387:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9398:5:9",
																		"nodeType": "YulLeave",
																		"src": "9398:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9379:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9379:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9372:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9372:6:9"
																},
																"nativeSrc": "9372:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9372:12:9"
															},
															"nativeSrc": "9369:36:9",
															"nodeType": "YulIf",
															"src": "9369:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9515:20:9",
																		"nodeType": "YulBlock",
																		"src": "9515:20:9",
																		"statements": [
																			{
																				"nativeSrc": "9517:10:9",
																				"nodeType": "YulAssignment",
																				"src": "9517:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9526:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9517:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9517:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9528:5:9",
																				"nodeType": "YulLeave",
																				"src": "9528:5:9"
																			}
																		]
																	},
																	"nativeSrc": "9508:27:9",
																	"nodeType": "YulCase",
																	"src": "9508:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9513:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9513:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9559:176:9",
																		"nodeType": "YulBlock",
																		"src": "9559:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9594:22:9",
																					"nodeType": "YulBlock",
																					"src": "9594:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9596:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "9596:16:9"
																								},
																								"nativeSrc": "9596:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9596:18:9"
																							},
																							"nativeSrc": "9596:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "9596:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9579:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "9579:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9589:3:9",
																							"nodeType": "YulLiteral",
																							"src": "9589:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9576:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "9576:2:9"
																					},
																					"nativeSrc": "9576:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9576:17:9"
																				},
																				"nativeSrc": "9573:43:9",
																				"nodeType": "YulIf",
																				"src": "9573:43:9"
																			},
																			{
																				"nativeSrc": "9629:25:9",
																				"nodeType": "YulAssignment",
																				"src": "9629:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9642:1:9",
																							"nodeType": "YulLiteral",
																							"src": "9642:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9645:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "9645:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9638:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9638:3:9"
																					},
																					"nativeSrc": "9638:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9638:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9629:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9629:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9685:22:9",
																					"nodeType": "YulBlock",
																					"src": "9685:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9687:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "9687:16:9"
																								},
																								"nativeSrc": "9687:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9687:18:9"
																							},
																							"nativeSrc": "9687:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "9687:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9673:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "9673:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9680:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9680:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9670:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "9670:2:9"
																					},
																					"nativeSrc": "9670:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9670:14:9"
																				},
																				"nativeSrc": "9667:40:9",
																				"nodeType": "YulIf",
																				"src": "9667:40:9"
																			},
																			{
																				"nativeSrc": "9720:5:9",
																				"nodeType": "YulLeave",
																				"src": "9720:5:9"
																			}
																		]
																	},
																	"nativeSrc": "9544:191:9",
																	"nodeType": "YulCase",
																	"src": "9544:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9549:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9549:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9465:4:9",
																"nodeType": "YulIdentifier",
																"src": "9465:4:9"
															},
															"nativeSrc": "9458:277:9",
															"nodeType": "YulSwitch",
															"src": "9458:277:9"
														},
														{
															"body": {
																"nativeSrc": "9867:123:9",
																"nodeType": "YulBlock",
																"src": "9867:123:9",
																"statements": [
																	{
																		"nativeSrc": "9881:28:9",
																		"nodeType": "YulAssignment",
																		"src": "9881:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9894:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "9894:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9900:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "9900:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9890:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9890:3:9"
																			},
																			"nativeSrc": "9890:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9890:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9881:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9881:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9940:22:9",
																			"nodeType": "YulBlock",
																			"src": "9940:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9942:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "9942:16:9"
																						},
																						"nativeSrc": "9942:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "9942:18:9"
																					},
																					"nativeSrc": "9942:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "9942:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9928:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "9928:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9935:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9935:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9925:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "9925:2:9"
																			},
																			"nativeSrc": "9925:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9925:14:9"
																		},
																		"nativeSrc": "9922:40:9",
																		"nodeType": "YulIf",
																		"src": "9922:40:9"
																	},
																	{
																		"nativeSrc": "9975:5:9",
																		"nodeType": "YulLeave",
																		"src": "9975:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9770:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "9770:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9776:2:9",
																						"nodeType": "YulLiteral",
																						"src": "9776:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9767:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "9767:2:9"
																				},
																				"nativeSrc": "9767:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9767:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9784:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "9784:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9794:2:9",
																						"nodeType": "YulLiteral",
																						"src": "9794:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9781:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "9781:2:9"
																				},
																				"nativeSrc": "9781:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9781:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9763:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9763:3:9"
																		},
																		"nativeSrc": "9763:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9763:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9819:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "9819:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9825:3:9",
																						"nodeType": "YulLiteral",
																						"src": "9825:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9816:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "9816:2:9"
																				},
																				"nativeSrc": "9816:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9816:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9834:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "9834:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9844:2:9",
																						"nodeType": "YulLiteral",
																						"src": "9844:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9831:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "9831:2:9"
																				},
																				"nativeSrc": "9831:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9812:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:9"
																		},
																		"nativeSrc": "9812:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9747:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9747:2:9"
																},
																"nativeSrc": "9747:111:9",
																"nodeType": "YulFunctionCall",
																"src": "9747:111:9"
															},
															"nativeSrc": "9744:246:9",
															"nodeType": "YulIf",
															"src": "9744:246:9"
														},
														{
															"nativeSrc": "10000:57:9",
															"nodeType": "YulAssignment",
															"src": "10000:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10034:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10034:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10037:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10037:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10043:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "10043:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10053:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10053:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10015:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "10015:18:9"
																},
																"nativeSrc": "10015:42:9",
																"nodeType": "YulFunctionCall",
																"src": "10015:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10000:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10000:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "10007:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10007:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10096:22:9",
																"nodeType": "YulBlock",
																"src": "10096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10098:16:9"
																			},
																			"nativeSrc": "10098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10098:18:9"
																		},
																		"nativeSrc": "10098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10073:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10073:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10084:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10084:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10089:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10089:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10080:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10080:3:9"
																		},
																		"nativeSrc": "10080:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10080:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10070:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10070:2:9"
																},
																"nativeSrc": "10070:25:9",
																"nodeType": "YulFunctionCall",
																"src": "10070:25:9"
															},
															"nativeSrc": "10067:51:9",
															"nodeType": "YulIf",
															"src": "10067:51:9"
														},
														{
															"nativeSrc": "10127:25:9",
															"nodeType": "YulAssignment",
															"src": "10127:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10140:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10140:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10147:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10147:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10136:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10136:3:9"
																},
																"nativeSrc": "10136:16:9",
																"nodeType": "YulFunctionCall",
																"src": "10136:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10127:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10127:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9085:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9115:4:9",
														"nodeType": "YulTypedName",
														"src": "9115:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9121:8:9",
														"nodeType": "YulTypedName",
														"src": "9121:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9131:3:9",
														"nodeType": "YulTypedName",
														"src": "9131:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9139:5:9",
														"nodeType": "YulTypedName",
														"src": "9139:5:9",
														"type": ""
													}
												],
												"src": "9085:1073:9"
											},
											{
												"body": {
													"nativeSrc": "10228:217:9",
													"nodeType": "YulBlock",
													"src": "10228:217:9",
													"statements": [
														{
															"nativeSrc": "10238:31:9",
															"nodeType": "YulAssignment",
															"src": "10238:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10264:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10264:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10246:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10246:17:9"
																},
																"nativeSrc": "10246:23:9",
																"nodeType": "YulFunctionCall",
																"src": "10246:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10238:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10238:4:9"
																}
															]
														},
														{
															"nativeSrc": "10278:37:9",
															"nodeType": "YulAssignment",
															"src": "10278:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10306:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "10306:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10290:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "10290:15:9"
																},
																"nativeSrc": "10290:25:9",
																"nodeType": "YulFunctionCall",
																"src": "10290:25:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10278:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "10278:8:9"
																}
															]
														},
														{
															"nativeSrc": "10325:113:9",
															"nodeType": "YulAssignment",
															"src": "10325:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10355:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10355:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10361:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "10361:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10371:66:9",
																		"nodeType": "YulLiteral",
																		"src": "10371:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10334:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "10334:20:9"
																},
																"nativeSrc": "10334:104:9",
																"nodeType": "YulFunctionCall",
																"src": "10334:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10325:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10325:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10164:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10203:4:9",
														"nodeType": "YulTypedName",
														"src": "10203:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10209:8:9",
														"nodeType": "YulTypedName",
														"src": "10209:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10222:5:9",
														"nodeType": "YulTypedName",
														"src": "10222:5:9",
														"type": ""
													}
												],
												"src": "10164:281:9"
											},
											{
												"body": {
													"nativeSrc": "10499:362:9",
													"nodeType": "YulBlock",
													"src": "10499:362:9",
													"statements": [
														{
															"nativeSrc": "10509:25:9",
															"nodeType": "YulAssignment",
															"src": "10509:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10532:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10532:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10514:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10514:17:9"
																},
																"nativeSrc": "10514:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10514:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10509:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10509:1:9"
																}
															]
														},
														{
															"nativeSrc": "10543:25:9",
															"nodeType": "YulAssignment",
															"src": "10543:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10566:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10566:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10548:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10548:17:9"
																},
																"nativeSrc": "10548:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10548:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10543:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10543:1:9"
																}
															]
														},
														{
															"nativeSrc": "10577:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10577:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10600:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10600:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10603:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10603:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10596:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10596:3:9"
																},
																"nativeSrc": "10596:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10596:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10581:11:9",
																	"nodeType": "YulTypedName",
																	"src": "10581:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10614:41:9",
															"nodeType": "YulAssignment",
															"src": "10614:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10643:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "10643:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10625:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10625:17:9"
																},
																"nativeSrc": "10625:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10625:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10614:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10614:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10832:22:9",
																"nodeType": "YulBlock",
																"src": "10832:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10834:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10834:16:9"
																			},
																			"nativeSrc": "10834:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10834:18:9"
																		},
																		"nativeSrc": "10834:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10834:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10765:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "10765:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10758:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10758:6:9"
																				},
																				"nativeSrc": "10758:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10758:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10788:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "10788:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10795:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "10795:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10804:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "10804:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10791:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10791:3:9"
																						},
																						"nativeSrc": "10791:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10791:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10785:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "10785:2:9"
																				},
																				"nativeSrc": "10785:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10785:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10738:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10738:2:9"
																		},
																		"nativeSrc": "10738:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10738:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10718:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:9"
																},
																"nativeSrc": "10718:113:9",
																"nodeType": "YulFunctionCall",
																"src": "10718:113:9"
															},
															"nativeSrc": "10715:139:9",
															"nodeType": "YulIf",
															"src": "10715:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10451:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10482:1:9",
														"nodeType": "YulTypedName",
														"src": "10482:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10485:1:9",
														"nodeType": "YulTypedName",
														"src": "10485:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10491:7:9",
														"nodeType": "YulTypedName",
														"src": "10491:7:9",
														"type": ""
													}
												],
												"src": "10451:410:9"
											},
											{
												"body": {
													"nativeSrc": "10973:70:9",
													"nodeType": "YulBlock",
													"src": "10973:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10995:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10995:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11003:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11003:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10991:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10991:3:9"
																		},
																		"nativeSrc": "10991:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10991:14:9"
																	},
																	{
																		"hexValue": "4d6178696d756d206d696e7420616d6f756e7420697320313030",
																		"kind": "string",
																		"nativeSrc": "11007:28:9",
																		"nodeType": "YulLiteral",
																		"src": "11007:28:9",
																		"type": "",
																		"value": "Maximum mint amount is 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10984:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10984:6:9"
																},
																"nativeSrc": "10984:52:9",
																"nodeType": "YulFunctionCall",
																"src": "10984:52:9"
															},
															"nativeSrc": "10984:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "10984:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f",
												"nativeSrc": "10867:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10965:6:9",
														"nodeType": "YulTypedName",
														"src": "10965:6:9",
														"type": ""
													}
												],
												"src": "10867:176:9"
											},
											{
												"body": {
													"nativeSrc": "11195:220:9",
													"nodeType": "YulBlock",
													"src": "11195:220:9",
													"statements": [
														{
															"nativeSrc": "11205:74:9",
															"nodeType": "YulAssignment",
															"src": "11205:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11271:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11271:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11276:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11276:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11212:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11212:58:9"
																},
																"nativeSrc": "11212:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11212:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11205:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11205:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11377:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11377:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f",
																	"nativeSrc": "11288:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11288:88:9"
																},
																"nativeSrc": "11288:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11288:93:9"
															},
															"nativeSrc": "11288:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11288:93:9"
														},
														{
															"nativeSrc": "11390:19:9",
															"nodeType": "YulAssignment",
															"src": "11390:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11401:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11401:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11406:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11406:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11397:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11397:3:9"
																},
																"nativeSrc": "11397:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11397:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11390:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11390:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11049:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11183:3:9",
														"nodeType": "YulTypedName",
														"src": "11183:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11191:3:9",
														"nodeType": "YulTypedName",
														"src": "11191:3:9",
														"type": ""
													}
												],
												"src": "11049:366:9"
											},
											{
												"body": {
													"nativeSrc": "11592:248:9",
													"nodeType": "YulBlock",
													"src": "11592:248:9",
													"statements": [
														{
															"nativeSrc": "11602:26:9",
															"nodeType": "YulAssignment",
															"src": "11602:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11614:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11614:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11625:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11625:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11610:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11610:3:9"
																},
																"nativeSrc": "11610:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11610:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11602:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11602:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11649:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11649:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11660:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11660:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11645:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11645:3:9"
																		},
																		"nativeSrc": "11645:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11645:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11668:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11668:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11674:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11674:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11664:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11664:3:9"
																		},
																		"nativeSrc": "11664:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11664:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11638:6:9"
																},
																"nativeSrc": "11638:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11638:47:9"
															},
															"nativeSrc": "11638:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11638:47:9"
														},
														{
															"nativeSrc": "11694:139:9",
															"nodeType": "YulAssignment",
															"src": "11694:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11828:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11828:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11702:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11702:124:9"
																},
																"nativeSrc": "11702:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11702:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11694:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11694:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11421:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11572:9:9",
														"nodeType": "YulTypedName",
														"src": "11572:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11587:4:9",
														"nodeType": "YulTypedName",
														"src": "11587:4:9",
														"type": ""
													}
												],
												"src": "11421:419:9"
											},
											{
												"body": {
													"nativeSrc": "11952:62:9",
													"nodeType": "YulBlock",
													"src": "11952:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11974:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11974:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11982:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11982:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11970:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11970:3:9"
																		},
																		"nativeSrc": "11970:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11970:14:9"
																	},
																	{
																		"hexValue": "546f74616c737570706c7920657863656564",
																		"kind": "string",
																		"nativeSrc": "11986:20:9",
																		"nodeType": "YulLiteral",
																		"src": "11986:20:9",
																		"type": "",
																		"value": "Totalsupply exceed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11963:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11963:6:9"
																},
																"nativeSrc": "11963:44:9",
																"nodeType": "YulFunctionCall",
																"src": "11963:44:9"
															},
															"nativeSrc": "11963:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "11963:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d",
												"nativeSrc": "11846:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11944:6:9",
														"nodeType": "YulTypedName",
														"src": "11944:6:9",
														"type": ""
													}
												],
												"src": "11846:168:9"
											},
											{
												"body": {
													"nativeSrc": "12166:220:9",
													"nodeType": "YulBlock",
													"src": "12166:220:9",
													"statements": [
														{
															"nativeSrc": "12176:74:9",
															"nodeType": "YulAssignment",
															"src": "12176:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12242:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12242:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12247:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12247:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12183:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12183:58:9"
																},
																"nativeSrc": "12183:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12183:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12176:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12176:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12348:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12348:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d",
																	"nativeSrc": "12259:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12259:88:9"
																},
																"nativeSrc": "12259:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12259:93:9"
															},
															"nativeSrc": "12259:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12259:93:9"
														},
														{
															"nativeSrc": "12361:19:9",
															"nodeType": "YulAssignment",
															"src": "12361:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12372:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12372:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12377:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12377:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12368:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12368:3:9"
																},
																"nativeSrc": "12368:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12368:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12361:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12361:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12020:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12154:3:9",
														"nodeType": "YulTypedName",
														"src": "12154:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12162:3:9",
														"nodeType": "YulTypedName",
														"src": "12162:3:9",
														"type": ""
													}
												],
												"src": "12020:366:9"
											},
											{
												"body": {
													"nativeSrc": "12563:248:9",
													"nodeType": "YulBlock",
													"src": "12563:248:9",
													"statements": [
														{
															"nativeSrc": "12573:26:9",
															"nodeType": "YulAssignment",
															"src": "12573:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12585:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12585:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12596:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12596:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12581:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12581:3:9"
																},
																"nativeSrc": "12581:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12581:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12573:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12573:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12620:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12620:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12631:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12631:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12616:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12616:3:9"
																		},
																		"nativeSrc": "12616:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12616:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12639:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12639:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12645:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12645:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12635:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:9"
																		},
																		"nativeSrc": "12635:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12635:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12609:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12609:6:9"
																},
																"nativeSrc": "12609:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12609:47:9"
															},
															"nativeSrc": "12609:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12609:47:9"
														},
														{
															"nativeSrc": "12665:139:9",
															"nodeType": "YulAssignment",
															"src": "12665:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12799:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12799:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12673:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12673:124:9"
																},
																"nativeSrc": "12673:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12673:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12665:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12665:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12392:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12543:9:9",
														"nodeType": "YulTypedName",
														"src": "12543:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12558:4:9",
														"nodeType": "YulTypedName",
														"src": "12558:4:9",
														"type": ""
													}
												],
												"src": "12392:419:9"
											},
											{
												"body": {
													"nativeSrc": "12971:288:9",
													"nodeType": "YulBlock",
													"src": "12971:288:9",
													"statements": [
														{
															"nativeSrc": "12981:26:9",
															"nodeType": "YulAssignment",
															"src": "12981:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12993:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12993:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13004:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13004:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12989:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12989:3:9"
																},
																"nativeSrc": "12989:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12989:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12981:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12981:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13061:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13061:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13074:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13074:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13085:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13085:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13070:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13070:3:9"
																		},
																		"nativeSrc": "13070:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13070:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13017:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13017:43:9"
																},
																"nativeSrc": "13017:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13017:71:9"
															},
															"nativeSrc": "13017:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13017:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13142:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13142:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13155:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13155:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13166:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13166:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13151:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13151:3:9"
																		},
																		"nativeSrc": "13151:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13151:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13098:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13098:43:9"
																},
																"nativeSrc": "13098:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13098:72:9"
															},
															"nativeSrc": "13098:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13098:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13224:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13224:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13237:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13237:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13248:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13248:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13233:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13233:3:9"
																		},
																		"nativeSrc": "13233:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13233:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13180:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13180:43:9"
																},
																"nativeSrc": "13180:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13180:72:9"
															},
															"nativeSrc": "13180:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13180:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12817:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12927:9:9",
														"nodeType": "YulTypedName",
														"src": "12927:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12939:6:9",
														"nodeType": "YulTypedName",
														"src": "12939:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12947:6:9",
														"nodeType": "YulTypedName",
														"src": "12947:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12955:6:9",
														"nodeType": "YulTypedName",
														"src": "12955:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12966:4:9",
														"nodeType": "YulTypedName",
														"src": "12966:4:9",
														"type": ""
													}
												],
												"src": "12817:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12(memPtr) {\n\n        mstore(add(memPtr, 0), \"wait 1 minute for each mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maximum mint amount is 100\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Totalsupply exceed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063a0712d6811610064578063a0712d6814610238578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b80638da5cb5b146101e057806395d89b41146101fe5780639a49090e1461021c576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806370a08231146101a6578063715018a6146101d6576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102d0565b6040516101019190610f6b565b60405180910390f35b610124600480360381019061011f919061101c565b610360565b6040516101319190611074565b60405180910390f35b610142610382565b60405161014f919061109c565b60405180910390f35b610172600480360381019061016d91906110b5565b61038b565b60405161017f9190611074565b60405180910390f35b6101906103b9565b60405161019d9190611120565b60405180910390f35b6101c060048036038101906101bb9190611139565b6103c1565b6040516101cd919061109c565b60405180910390f35b6101de610406565b005b6101e8610419565b6040516101f59190611173565b60405180910390f35b610206610441565b6040516102139190610f6b565b60405180910390f35b6102366004803603810190610231919061101c565b6104d1565b005b610252600480360381019061024d919061118c565b61062d565b005b61026e6004803603810190610269919061101c565b610686565b60405161027b9190611074565b60405180910390f35b61029e600480360381019061029991906111b7565b6106a8565b6040516102ab919061109c565b60405180910390f35b6102ce60048036038101906102c99190611139565b61072a565b005b6060600380546102df90611222565b80601f016020809104026020016040519081016040528092919081815260200182805461030b90611222565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f8061036a6107ae565b90506103778185856107b5565b600191505092915050565b5f600254905090565b5f806103956107ae565b90506103a28582856107c7565b6103ad85858561085a565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61040e61094a565b6104175f6109d1565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461045090611222565b80601f016020809104026020016040519081016040528092919081815260200182805461047c90611222565b80156104c75780601f1061049e576101008083540402835291602001916104c7565b820191905f5260205f20905b8154815290600101906020018083116104aa57829003601f168201915b5050505050905090565b42603c6006546104e1919061127f565b1115610522576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610519906112fc565b60405180910390fd5b61052a6103b9565b600a6105369190611449565b60646105429190611493565b61054a6103b9565b600a6105569190611449565b826105619190611493565b11156105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061151e565b60405180910390fd5b6105aa6103b9565b600a6105b69190611449565b620f42406105c49190611493565b816105cd610382565b6105d7919061127f565b1115610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90611586565b60405180910390fd5b6106228282610a94565b426006819055505050565b61063561094a565b6064811115610679576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106709061151e565b60405180910390fd5b6106833382610a94565b50565b5f806106906107ae565b905061069d81858561085a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61073261094a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107999190611173565b60405180910390fd5b6107ab816109d1565b50565b5f33905090565b6107c28383836001610b13565b505050565b5f6107d284846106a8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108545781811015610845578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083c939291906115a4565b60405180910390fd5b61085384848484035f610b13565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108ca575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108c19190611173565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361093a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109319190611173565b60405180910390fd5b610945838383610ce2565b505050565b6109526107ae565b73ffffffffffffffffffffffffffffffffffffffff16610970610419565b73ffffffffffffffffffffffffffffffffffffffff16146109cf576109936107ae565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109c69190611173565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b04575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610afb9190611173565b60405180910390fd5b610b0f5f8383610ce2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b83575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b7a9190611173565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bea9190611173565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cdc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cd3919061109c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d32578060025f828254610d26919061127f565b92505081905550610e00565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610dbb578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610db2939291906115a4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e47578060025f8282540392505081905550610e91565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eee919061109c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f3d82610efb565b610f478185610f05565b9350610f57818560208601610f15565b610f6081610f23565b840191505092915050565b5f6020820190508181035f830152610f838184610f33565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fb882610f8f565b9050919050565b610fc881610fae565b8114610fd2575f80fd5b50565b5f81359050610fe381610fbf565b92915050565b5f819050919050565b610ffb81610fe9565b8114611005575f80fd5b50565b5f8135905061101681610ff2565b92915050565b5f806040838503121561103257611031610f8b565b5b5f61103f85828601610fd5565b925050602061105085828601611008565b9150509250929050565b5f8115159050919050565b61106e8161105a565b82525050565b5f6020820190506110875f830184611065565b92915050565b61109681610fe9565b82525050565b5f6020820190506110af5f83018461108d565b92915050565b5f805f606084860312156110cc576110cb610f8b565b5b5f6110d986828701610fd5565b93505060206110ea86828701610fd5565b92505060406110fb86828701611008565b9150509250925092565b5f60ff82169050919050565b61111a81611105565b82525050565b5f6020820190506111335f830184611111565b92915050565b5f6020828403121561114e5761114d610f8b565b5b5f61115b84828501610fd5565b91505092915050565b61116d81610fae565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f602082840312156111a1576111a0610f8b565b5b5f6111ae84828501611008565b91505092915050565b5f80604083850312156111cd576111cc610f8b565b5b5f6111da85828601610fd5565b92505060206111eb85828601610fd5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061123957607f821691505b60208210810361124c5761124b6111f5565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61128982610fe9565b915061129483610fe9565b92508282019050808211156112ac576112ab611252565b5b92915050565b7f776169742031206d696e75746520666f722065616368206d696e7400000000005f82015250565b5f6112e6601b83610f05565b91506112f1826112b2565b602082019050919050565b5f6020820190508181035f830152611313816112da565b9050919050565b5f8160011c9050919050565b5f808291508390505b600185111561136f5780860481111561134b5761134a611252565b5b600185161561135a5780820291505b80810290506113688561131a565b945061132f565b94509492505050565b5f826113875760019050611442565b81611394575f9050611442565b81600181146113aa57600281146113b4576113e3565b6001915050611442565b60ff8411156113c6576113c5611252565b5b8360020a9150848211156113dd576113dc611252565b5b50611442565b5060208310610133831016604e8410600b84101617156114185782820a90508381111561141357611412611252565b5b611442565b6114258484846001611326565b9250905081840481111561143c5761143b611252565b5b81810290505b9392505050565b5f61145382610fe9565b915061145e83611105565b925061148b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611378565b905092915050565b5f61149d82610fe9565b91506114a883610fe9565b92508282026114b681610fe9565b915082820484148315176114cd576114cc611252565b5b5092915050565b7f4d6178696d756d206d696e7420616d6f756e74206973203130300000000000005f82015250565b5f611508601a83610f05565b9150611513826114d4565b602082019050919050565b5f6020820190508181035f830152611535816114fc565b9050919050565b7f546f74616c737570706c792065786365656400000000000000000000000000005f82015250565b5f611570601283610f05565b915061157b8261153c565b602082019050919050565b5f6020820190508181035f83015261159d81611564565b9050919050565b5f6060820190506115b75f830186611164565b6115c4602083018561108d565b6115d1604083018461108d565b94935050505056fea264697066735822122095fb092d7fd56e535a3367c094f92e59725c515f1b6de35f2a7c7dc4bbe4f85164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x9A49090E EQ PUSH2 0x21C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36A PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x395 PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E PUSH2 0x94A JUMP JUMPDEST PUSH2 0x417 PUSH0 PUSH2 0x9D1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x1222 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x3C PUSH1 0x6 SLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST GT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x519 SWAP1 PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52A PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x54A PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP3 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST GT ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5AA PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST DUP2 PUSH2 0x5CD PUSH2 0x382 JUMP JUMPDEST PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST GT ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 DUP3 DUP3 PUSH2 0xA94 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x635 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x683 CALLER DUP3 PUSH2 0xA94 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x690 PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP PUSH2 0x69D DUP2 DUP6 DUP6 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x732 PUSH2 0x94A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x9D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D2 DUP5 DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x854 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x845 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x853 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB13 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x945 DUP4 DUP4 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x952 PUSH2 0x7AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x970 PUSH2 0x419 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CF JUMPI PUSH2 0x993 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0F PUSH0 DUP4 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB83 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCDC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD32 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD26 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE00 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDBB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE47 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE91 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF3D DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xF47 DUP2 DUP6 PUSH2 0xF05 JUMP JUMPDEST SWAP4 POP PUSH2 0xF57 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF15 JUMP JUMPDEST PUSH2 0xF60 DUP2 PUSH2 0xF23 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF83 DUP2 DUP5 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB8 DUP3 PUSH2 0xF8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE3 DUP2 PUSH2 0xFBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFB DUP2 PUSH2 0xFE9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1005 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1016 DUP2 PUSH2 0xFF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x103F DUP6 DUP3 DUP7 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0x1008 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x105A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1087 PUSH0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1096 DUP2 PUSH2 0xFE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AF PUSH0 DUP4 ADD DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CB PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D9 DUP7 DUP3 DUP8 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10EA DUP7 DUP3 DUP8 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10FB DUP7 DUP3 DUP8 ADD PUSH2 0x1008 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111A DUP2 PUSH2 0x1105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1133 PUSH0 DUP4 ADD DUP5 PUSH2 0x1111 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114E JUMPI PUSH2 0x114D PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x115B DUP5 DUP3 DUP6 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x116D DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1186 PUSH0 DUP4 ADD DUP5 PUSH2 0x1164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A0 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AE DUP5 DUP3 DUP6 ADD PUSH2 0x1008 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xF8B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11DA DUP6 DUP3 DUP7 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11EB DUP6 DUP3 DUP7 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1239 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x11F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1289 DUP3 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1294 DUP4 PUSH2 0xFE9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AB PUSH2 0x1252 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776169742031206D696E75746520666F722065616368206D696E740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12E6 PUSH1 0x1B DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F1 DUP3 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1313 DUP2 PUSH2 0x12DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x136F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x1252 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x135A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1368 DUP6 PUSH2 0x131A JUMP JUMPDEST SWAP5 POP PUSH2 0x132F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1387 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1442 JUMP JUMPDEST DUP2 PUSH2 0x1394 JUMPI PUSH0 SWAP1 POP PUSH2 0x1442 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x13AA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1442 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x13C6 JUMPI PUSH2 0x13C5 PUSH2 0x1252 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x13DD JUMPI PUSH2 0x13DC PUSH2 0x1252 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1442 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1418 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1413 JUMPI PUSH2 0x1412 PUSH2 0x1252 JUMP JUMPDEST JUMPDEST PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x1425 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1326 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x143C JUMPI PUSH2 0x143B PUSH2 0x1252 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1453 DUP3 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x145E DUP4 PUSH2 0x1105 JUMP JUMPDEST SWAP3 POP PUSH2 0x148B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x149D DUP3 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A8 DUP4 PUSH2 0xFE9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14B6 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1252 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6178696D756D206D696E7420616D6F756E7420697320313030000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1508 PUSH1 0x1A DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1513 DUP3 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1535 DUP2 PUSH2 0x14FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C737570706C79206578636565640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1570 PUSH1 0x12 DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP3 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159D DUP2 PUSH2 0x1564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x15C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x15D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB MULMOD 0x2D PUSH32 0xD56E535A3367C094F92E59725C515F1B6DE35F2A7C7DC4BBE4F85164736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "250:800:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;637:408:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;477:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2985:116::-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;637:408:8:-;730:15;724:2;710:11;;:16;;;;:::i;:::-;:35;;702:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;836:10;:8;:10::i;:::-;830:2;:16;;;;:::i;:::-;824:3;:22;;;;:::i;:::-;810:10;:8;:10::i;:::-;804:2;:16;;;;:::i;:::-;795:6;:25;;;;:::i;:::-;:51;;787:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;935:10;:8;:10::i;:::-;929:2;:16;;;;:::i;:::-;919:7;:26;;;;:::i;:::-;909:6;895:13;:11;:13::i;:::-;:20;;;;:::i;:::-;:50;;887:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;980:17;986:2;990:6;980:5;:17::i;:::-;1022:15;1008:11;:29;;;;637:408;;:::o;477:152::-;1531:13:0;:11;:13::i;:::-;552:3:8::1;542:6;:13;;534:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;596:25;602:10;614:6;596:5;:25::i;:::-;477:152:::0;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:180::-;6808:77;6805:1;6798:88;6905:4;6902:1;6895:15;6929:4;6926:1;6919:15;6946:191;6986:3;7005:20;7023:1;7005:20;:::i;:::-;7000:25;;7039:20;7057:1;7039:20;:::i;:::-;7034:25;;7082:1;7079;7075:9;7068:16;;7103:3;7100:1;7097:10;7094:36;;;7110:18;;:::i;:::-;7094:36;6946:191;;;;:::o;7143:177::-;7283:29;7279:1;7271:6;7267:14;7260:53;7143:177;:::o;7326:366::-;7468:3;7489:67;7553:2;7548:3;7489:67;:::i;:::-;7482:74;;7565:93;7654:3;7565:93;:::i;:::-;7683:2;7678:3;7674:12;7667:19;;7326:366;;;:::o;7698:419::-;7864:4;7902:2;7891:9;7887:18;7879:26;;7951:9;7945:4;7941:20;7937:1;7926:9;7922:17;7915:47;7979:131;8105:4;7979:131;:::i;:::-;7971:139;;7698:419;;;:::o;8123:102::-;8165:8;8212:5;8209:1;8205:13;8184:34;;8123:102;;;:::o;8231:848::-;8292:5;8299:4;8323:6;8314:15;;8347:5;8338:14;;8361:712;8382:1;8372:8;8369:15;8361:712;;;8477:4;8472:3;8468:14;8462:4;8459:24;8456:50;;;8486:18;;:::i;:::-;8456:50;8536:1;8526:8;8522:16;8519:451;;;8951:4;8944:5;8940:16;8931:25;;8519:451;9001:4;8995;8991:15;8983:23;;9031:32;9054:8;9031:32;:::i;:::-;9019:44;;8361:712;;;8231:848;;;;;;;:::o;9085:1073::-;9139:5;9330:8;9320:40;;9351:1;9342:10;;9353:5;;9320:40;9379:4;9369:36;;9396:1;9387:10;;9398:5;;9369:36;9465:4;9513:1;9508:27;;;;9549:1;9544:191;;;;9458:277;;9508:27;9526:1;9517:10;;9528:5;;;9544:191;9589:3;9579:8;9576:17;9573:43;;;9596:18;;:::i;:::-;9573:43;9645:8;9642:1;9638:16;9629:25;;9680:3;9673:5;9670:14;9667:40;;;9687:18;;:::i;:::-;9667:40;9720:5;;;9458:277;;9844:2;9834:8;9831:16;9825:3;9819:4;9816:13;9812:36;9794:2;9784:8;9781:16;9776:2;9770:4;9767:12;9763:35;9747:111;9744:246;;;9900:8;9894:4;9890:19;9881:28;;9935:3;9928:5;9925:14;9922:40;;;9942:18;;:::i;:::-;9922:40;9975:5;;9744:246;10015:42;10053:3;10043:8;10037:4;10034:1;10015:42;:::i;:::-;10000:57;;;;10089:4;10084:3;10080:14;10073:5;10070:25;10067:51;;;10098:18;;:::i;:::-;10067:51;10147:4;10140:5;10136:16;10127:25;;9085:1073;;;;;;:::o;10164:281::-;10222:5;10246:23;10264:4;10246:23;:::i;:::-;10238:31;;10290:25;10306:8;10290:25;:::i;:::-;10278:37;;10334:104;10371:66;10361:8;10355:4;10334:104;:::i;:::-;10325:113;;10164:281;;;;:::o;10451:410::-;10491:7;10514:20;10532:1;10514:20;:::i;:::-;10509:25;;10548:20;10566:1;10548:20;:::i;:::-;10543:25;;10603:1;10600;10596:9;10625:30;10643:11;10625:30;:::i;:::-;10614:41;;10804:1;10795:7;10791:15;10788:1;10785:22;10765:1;10758:9;10738:83;10715:139;;10834:18;;:::i;:::-;10715:139;10499:362;10451:410;;;;:::o;10867:176::-;11007:28;11003:1;10995:6;10991:14;10984:52;10867:176;:::o;11049:366::-;11191:3;11212:67;11276:2;11271:3;11212:67;:::i;:::-;11205:74;;11288:93;11377:3;11288:93;:::i;:::-;11406:2;11401:3;11397:12;11390:19;;11049:366;;;:::o;11421:419::-;11587:4;11625:2;11614:9;11610:18;11602:26;;11674:9;11668:4;11664:20;11660:1;11649:9;11645:17;11638:47;11702:131;11828:4;11702:131;:::i;:::-;11694:139;;11421:419;;;:::o;11846:168::-;11986:20;11982:1;11974:6;11970:14;11963:44;11846:168;:::o;12020:366::-;12162:3;12183:67;12247:2;12242:3;12183:67;:::i;:::-;12176:74;;12259:93;12348:3;12259:93;:::i;:::-;12377:2;12372:3;12368:12;12361:19;;12020:366;;;:::o;12392:419::-;12558:4;12596:2;12585:9;12581:18;12573:26;;12645:9;12639:4;12635:20;12631:1;12620:9;12616:17;12609:47;12673:131;12799:4;12673:131;:::i;:::-;12665:139;;12392:419;;;:::o;12817:442::-;12966:4;13004:2;12993:9;12989:18;12981:26;;13017:71;13085:1;13074:9;13070:17;13061:6;13017:71;:::i;:::-;13098:72;13166:2;13155:9;13151:18;13142:6;13098:72;:::i;:::-;13180;13248:2;13237:9;13233:18;13224:6;13180:72;:::i;:::-;12817:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1129400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"decimals()": "383",
								"mint(uint256)": "infinite",
								"mintReward(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 1050,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 469,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 469,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 469,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 469,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 469,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 469,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 325,
									"end": 469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 469,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 394,
									"end": 406,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "526577617264546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5257540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 418,
									"end": 461,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 424,
									"end": 434,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 450,
									"end": 460,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 450,
									"end": 458,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 458,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 450,
									"end": 460,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 460,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 450,
									"end": 460,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 450,
									"end": 460,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 450,
									"end": 460,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 444,
									"end": 446,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 444,
									"end": 460,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 444,
									"end": 460,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 444,
									"end": 460,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 444,
									"end": 460,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 444,
									"end": 460,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 444,
									"end": 460,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 444,
									"end": 460,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 436,
									"end": 441,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "2710"
								},
								{
									"begin": 436,
									"end": 460,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 436,
									"end": 460,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 436,
									"end": 460,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 436,
									"end": 460,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 436,
									"end": 460,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 436,
									"end": 460,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 436,
									"end": 460,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 418,
									"end": 423,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 418,
									"end": 423,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 423,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 418,
									"end": 461,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 461,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 418,
									"end": 461,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 418,
									"end": 461,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 418,
									"end": 461,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 325,
									"end": 469,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1050,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095fb092d7fd56e535a3367c094f92e59725c515f1b6de35f2a7c7dc4bbe4f85164736f6c634300081a0033",
									".code": [
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "A0712D68"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "A0712D68"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "9A49090E"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 1050,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 637,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 637,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 477,
											"end": 629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 477,
											"end": 629,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 629,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 477,
											"end": 629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 477,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 477,
											"end": 629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 477,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 477,
											"end": 629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 730,
											"end": 745,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 710,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 710,
											"end": 721,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 710,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 710,
											"end": 726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 710,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 710,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 710,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 710,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 710,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 710,
											"end": 745,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 710,
											"end": 745,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 702,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 702,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 702,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 836,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 836,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 836,
											"end": 846,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 830,
											"end": 832,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 830,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 830,
											"end": 846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 830,
											"end": 846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 830,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 830,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 830,
											"end": 846,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 830,
											"end": 846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 824,
											"end": 827,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 824,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 824,
											"end": 846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 824,
											"end": 846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 824,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 824,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 824,
											"end": 846,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 824,
											"end": 846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 810,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 810,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 810,
											"end": 820,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 810,
											"end": 820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 804,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 804,
											"end": 820,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 804,
											"end": 820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 804,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 804,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 820,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 804,
											"end": 820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 795,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 795,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 795,
											"end": 820,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 795,
											"end": 820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 795,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 795,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 795,
											"end": 820,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 795,
											"end": 820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 795,
											"end": 846,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 795,
											"end": 846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 787,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 787,
											"end": 876,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 787,
											"end": 876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 935,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 935,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 935,
											"end": 945,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 935,
											"end": 945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 929,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 929,
											"end": 945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 929,
											"end": 945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 929,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 929,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 929,
											"end": 945,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 929,
											"end": 945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 919,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "F4240"
										},
										{
											"begin": 919,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 919,
											"end": 945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 919,
											"end": 945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 919,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 919,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 919,
											"end": 945,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 919,
											"end": 945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 895,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 895,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 895,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 895,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 895,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 895,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 895,
											"end": 915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 895,
											"end": 915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 895,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 895,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 895,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 895,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 895,
											"end": 945,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 895,
											"end": 945,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 887,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 887,
											"end": 967,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 887,
											"end": 967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 980,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 986,
											"end": 988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 990,
											"end": 996,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 980,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 980,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 980,
											"end": 997,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1037,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1008,
											"end": 1037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1037,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 477,
											"end": 629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 542,
											"end": 548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 542,
											"end": 555,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 542,
											"end": 555,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 534,
											"end": 585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 534,
											"end": 585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 596,
											"end": 621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 602,
											"end": 612,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 614,
											"end": 620,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 596,
											"end": 601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 596,
											"end": 621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 596,
											"end": 621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 596,
											"end": 621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 477,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6885,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6902,
											"end": 6903,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6933,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6934,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7137,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 6946,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6986,
											"end": 6989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7023,
											"end": 7024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7005,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7025,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7005,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7025,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7039,
											"end": 7059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7034,
											"end": 7059,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7034,
											"end": 7059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7082,
											"end": 7083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7075,
											"end": 7084,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7101,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7097,
											"end": 7107,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7130,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 7094,
											"end": 7130,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7110,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7110,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7110,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7110,
											"end": 7128,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7110,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7130,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 7094,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7137,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7320,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7143,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7312,
											"name": "PUSH",
											"source": 9,
											"value": "776169742031206D696E75746520666F722065616368206D696E740000000000"
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7692,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7326,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7489,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7553,
											"end": 7555,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 7548,
											"end": 7551,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7489,
											"end": 7556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7556,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7489,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7654,
											"end": 7657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7565,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 7658,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7565,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7685,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7678,
											"end": 7681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7674,
											"end": 7686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7667,
											"end": 7686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7667,
											"end": 7686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 8117,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 7698,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7902,
											"end": 7904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7891,
											"end": 7900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7879,
											"end": 7905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7879,
											"end": 7905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7951,
											"end": 7960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7941,
											"end": 7961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 7939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7915,
											"end": 7962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7979,
											"end": 8110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8110,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7979,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7971,
											"end": 8110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7971,
											"end": 8110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 8117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 8117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 8117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 8117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8225,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8123,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8209,
											"end": 8210,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8205,
											"end": 8218,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 8184,
											"end": 8218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8184,
											"end": 8218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8292,
											"end": 8297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8323,
											"end": 8329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8347,
											"end": 8352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8383,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8372,
											"end": 8380,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8384,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8475,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8482,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8462,
											"end": 8466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8459,
											"end": 8483,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8486,
											"end": 8504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8536,
											"end": 8537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8526,
											"end": 8534,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8522,
											"end": 8538,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8970,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 8519,
											"end": 8970,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 8949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8940,
											"end": 8956,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8931,
											"end": 8956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8931,
											"end": 8956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8970,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 8519,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9001,
											"end": 9005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9006,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8983,
											"end": 9006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8983,
											"end": 9006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9054,
											"end": 9062,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 9031,
											"end": 9063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9063,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 8361,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 9079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9352,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9342,
											"end": 9352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9387,
											"end": 9397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9398,
											"end": 9403,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9465,
											"end": 9469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9513,
											"end": 9514,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9508,
											"end": 9535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9535,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9508,
											"end": 9535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9544,
											"end": 9735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9544,
											"end": 9735,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9544,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 9544,
											"end": 9735,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9458,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9458,
											"end": 9735,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9535,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9508,
											"end": 9535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9517,
											"end": 9527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9528,
											"end": 9533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9528,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9528,
											"end": 9533,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9544,
											"end": 9735,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 9544,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9592,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9576,
											"end": 9593,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9573,
											"end": 9616,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9573,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9573,
											"end": 9616,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 9596,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9573,
											"end": 9616,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9573,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9653,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9643,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9638,
											"end": 9654,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9629,
											"end": 9654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9629,
											"end": 9654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9680,
											"end": 9683,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9670,
											"end": 9684,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9667,
											"end": 9707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9667,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 9667,
											"end": 9707,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 9687,
											"end": 9705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9667,
											"end": 9707,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 9667,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9720,
											"end": 9725,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9458,
											"end": 9735,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9458,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9458,
											"end": 9735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9846,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9834,
											"end": 9842,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9831,
											"end": 9847,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9825,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9819,
											"end": 9823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9816,
											"end": 9829,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9812,
											"end": 9848,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9794,
											"end": 9796,
											"name": "PUSH",
											"source": 9,
											"value": "4E"
										},
										{
											"begin": 9784,
											"end": 9792,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9797,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 9770,
											"end": 9774,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9767,
											"end": 9779,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9858,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9744,
											"end": 9990,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9744,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 9744,
											"end": 9990,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9900,
											"end": 9908,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9890,
											"end": 9909,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9881,
											"end": 9909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9881,
											"end": 9909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 9938,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9939,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9922,
											"end": 9962,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9922,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9922,
											"end": 9962,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9942,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 9942,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 9942,
											"end": 9960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9942,
											"end": 9960,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 9942,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9922,
											"end": 9962,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9922,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9975,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9975,
											"end": 9980,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9744,
											"end": 9990,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 9744,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 10053,
											"end": 10056,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10043,
											"end": 10051,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10037,
											"end": 10041,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10035,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10015,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10015,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10057,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 10015,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10057,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10087,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10080,
											"end": 10094,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10095,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10067,
											"end": 10118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10067,
											"end": 10118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 10067,
											"end": 10118,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10098,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 10098,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10098,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10098,
											"end": 10116,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 10098,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10067,
											"end": 10118,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 10067,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10136,
											"end": 10152,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10127,
											"end": 10152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10127,
											"end": 10152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 10158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10222,
											"end": 10227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 10264,
											"end": 10268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10246,
											"end": 10269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10269,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 10246,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 10306,
											"end": 10314,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10290,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10315,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 10290,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10278,
											"end": 10315,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10278,
											"end": 10315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10334,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 10371,
											"end": 10437,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10361,
											"end": 10369,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10355,
											"end": 10359,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10334,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 10334,
											"end": 10438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10334,
											"end": 10438,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 10334,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10325,
											"end": 10438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10325,
											"end": 10438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10861,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 10451,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10491,
											"end": 10498,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10514,
											"end": 10534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10509,
											"end": 10534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10509,
											"end": 10534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10566,
											"end": 10567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10548,
											"end": 10568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10568,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10548,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10568,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10603,
											"end": 10604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10600,
											"end": 10601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10596,
											"end": 10605,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 10643,
											"end": 10654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10625,
											"end": 10655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10655,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 10625,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10804,
											"end": 10805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10795,
											"end": 10802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10791,
											"end": 10806,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10788,
											"end": 10789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10785,
											"end": 10807,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10765,
											"end": 10766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10767,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10821,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10834,
											"end": 10852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10861,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 11043,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 10867,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11007,
											"end": 11035,
											"name": "PUSH",
											"source": 9,
											"value": "4D6178696D756D206D696E7420616D6F756E7420697320313030000000000000"
										},
										{
											"begin": 11003,
											"end": 11004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10995,
											"end": 11001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10984,
											"end": 11036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 11043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 11043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11415,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 11049,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11191,
											"end": 11194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11212,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 11276,
											"end": 11278,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 11271,
											"end": 11274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11212,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 11212,
											"end": 11279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11212,
											"end": 11279,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 11212,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11205,
											"end": 11279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11205,
											"end": 11279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11288,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 11377,
											"end": 11380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11288,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 11288,
											"end": 11381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11288,
											"end": 11381,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 11288,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11408,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11401,
											"end": 11404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11397,
											"end": 11409,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11390,
											"end": 11409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11390,
											"end": 11409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11415,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11840,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11421,
											"end": 11840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11587,
											"end": 11591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11625,
											"end": 11627,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11610,
											"end": 11628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11602,
											"end": 11628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11602,
											"end": 11628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 11683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11668,
											"end": 11672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11664,
											"end": 11684,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11660,
											"end": 11661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11649,
											"end": 11658,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11638,
											"end": 11685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11702,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11702,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 11702,
											"end": 11833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11702,
											"end": 11833,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 11702,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 12014,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 11846,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11986,
											"end": 12006,
											"name": "PUSH",
											"source": 9,
											"value": "546F74616C737570706C79206578636565640000000000000000000000000000"
										},
										{
											"begin": 11982,
											"end": 11983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11974,
											"end": 11980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11970,
											"end": 11984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 12007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 12014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 12014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12386,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 12020,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12162,
											"end": 12165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12183,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 12247,
											"end": 12249,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 12242,
											"end": 12245,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12183,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 12183,
											"end": 12250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12183,
											"end": 12250,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 12183,
											"end": 12250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12250,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12259,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 12348,
											"end": 12351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12259,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 12259,
											"end": 12352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12259,
											"end": 12352,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 12259,
											"end": 12352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12377,
											"end": 12379,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12372,
											"end": 12375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12368,
											"end": 12380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12392,
											"end": 12811,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 12392,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12596,
											"end": 12598,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12581,
											"end": 12599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12645,
											"end": 12654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12635,
											"end": 12655,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12631,
											"end": 12632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12620,
											"end": 12629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12616,
											"end": 12633,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12609,
											"end": 12656,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12673,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 12799,
											"end": 12803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12673,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 12673,
											"end": 12804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12673,
											"end": 12804,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 12673,
											"end": 12804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12392,
											"end": 12811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12392,
											"end": 12811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12392,
											"end": 12811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12392,
											"end": 12811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12966,
											"end": 12970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13004,
											"end": 13006,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12993,
											"end": 13002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13083,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13070,
											"end": 13087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13061,
											"end": 13067,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 13017,
											"end": 13088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13166,
											"end": 13168,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13142,
											"end": 13148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 13098,
											"end": 13170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13180,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13248,
											"end": 13250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13237,
											"end": 13246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13224,
											"end": 13230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13180,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 13180,
											"end": 13252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13180,
											"end": 13252,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13180,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 13259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"OpenzepplineToken/RewardToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"mintReward(address,uint256)": "9a49090e",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OpenzepplineToken/RewardToken.sol\":\"RewardToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"OpenzepplineToken/RewardToken.sol\":{\"keccak256\":\"0xf188838eeb638115d11a68cb85a601b33c0480399ea031227904519c66d88873\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd1b4773d2827f740e295c15ab7e72a35c07a0a9aa1b6eddcb74dae8808a8462\",\"dweb:/ipfs/QmSFcJRp9QwuQaRR2sYTJvoJCVrnCk9YgKBb8XLrjfJ6Ju\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "OpenzepplineToken/RewardToken.sol:RewardToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "OpenzepplineToken/RewardToken.sol:RewardToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "OpenzepplineToken/RewardToken.sol:RewardToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "OpenzepplineToken/RewardToken.sol:RewardToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "OpenzepplineToken/RewardToken.sol:RewardToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "OpenzepplineToken/RewardToken.sol:RewardToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1086,
								"contract": "OpenzepplineToken/RewardToken.sol:RewardToken",
								"label": "currentTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 968,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								967
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							937
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 938,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 937,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 968,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 937,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								937,
								877,
								967
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										930
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							911
						],
						"Pausable": [
							1075
						]
					},
					"id": 912,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 912,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 912,
							"sourceUnit": 1076,
							"src": "186:53:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1075,
										"src": "194:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "ERC20",
										"nameLocations": [
											"965:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "965:5:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "965:5:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "Pausable",
										"nameLocations": [
											"972:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1075,
										"src": "972:8:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "972:8:4"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "241:688:4",
								"text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 911,
							"linearizedBaseContracts": [
								911,
								1075,
								799,
								189,
								937,
								877,
								967
							],
							"name": "ERC20Pausable",
							"nameLocation": "948:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "1211:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "1235:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1241:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1245:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 901,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1221:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$911_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1227:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "1221:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "1221:30:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "987:121:4",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 899,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 898,
												"name": "whenNotPaused",
												"nameLocations": [
													"1197:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1000,
												"src": "1197:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1197:13:4"
										}
									],
									"name": "_update",
									"nameLocation": "1122:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1188:8:4"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1138:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1130:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1152:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1144:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1164:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1156:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:41:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:4"
									},
									"scope": 911,
									"src": "1113:145:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 912,
							"src": "930:330:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188,
								989,
								992
							],
							"usedEvents": [
								811,
								820,
								981,
								986
							]
						}
					],
					"src": "124:1137:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							937
						]
					},
					"id": 938,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 913,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 914,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:5"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 916,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 937,
							"linearizedBaseContracts": [
								937,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 937,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 937,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 933,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 937,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 938,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 939,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 940,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 945,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 944,
												"id": 947,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 967,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 954,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 953,
												"id": 956,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 967,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 962,
												"id": 964,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 967,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 968,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"Pausable": [
							1075
						]
					},
					"id": 1076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1076,
							"sourceUnit": 968,
							"src": "128:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 970,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "136:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 973,
										"name": "Context",
										"nameLocations": [
											"645:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "645:7:7"
									},
									"id": 974,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:7"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1075,
							"linearizedBaseContracts": [
								1075,
								967
							],
							"name": "Pausable",
							"nameLocation": "633:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "659:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 975,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 981,
									"name": "Paused",
									"nameLocation": "770:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "777:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:7"
									},
									"src": "764:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 986,
									"name": "Unpaused",
									"nameLocation": "881:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "890:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:7"
									},
									"src": "875:32:7"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:7",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 989,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:7"
									},
									"src": "994:22:7"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:7",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 992,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:7"
									},
									"src": "1107:22:7"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "1340:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 995,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1350:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:7"
											},
											{
												"id": 998,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:7"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1000,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:7"
									},
									"src": "1315:72:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "1587:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1003,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1597:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:7"
											},
											{
												"id": 1006,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:7"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1008,
									"name": "whenPaused",
									"nameLocation": "1574:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:7"
									},
									"src": "1565:66:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "1779:31:7",
										"statements": [
											{
												"expression": {
													"id": 1014,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "1796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1015,
												"nodeType": "Return",
												"src": "1789:14:7"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:7"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1773:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:7"
									},
									"scope": 1075,
									"src": "1726:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1929:77:7",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1021,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "1943:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "1939:61:7",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "1953:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1023,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "1974:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "1967:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:7",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:7"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:7"
									},
									"scope": 1075,
									"src": "1878:128:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "2126:78:7",
										"statements": [
											{
												"condition": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1033,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "2141:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "2136:62:7",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "2151:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1036,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "2172:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1038,
															"nodeType": "RevertStatement",
															"src": "2165:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:7",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:7"
									},
									"scope": 1075,
									"src": "2078:126:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "2388:66:7",
										"statements": [
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1048,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2398:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1053,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "2434:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1052,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2427:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "EmitStatement",
												"src": "2422:25:7"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1046,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1045,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1000,
												"src": "2374:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:7"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:7"
									},
									"scope": 1075,
									"src": "2339:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "2634:69:7",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1064,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2644:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1069,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "2683:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1068,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2674:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "EmitStatement",
												"src": "2669:27:7"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1061,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1008,
												"src": "2623:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:7"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:7"
									},
									"scope": 1075,
									"src": "2586:117:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1076,
							"src": "615:2090:7",
							"usedErrors": [
								989,
								992
							],
							"usedEvents": [
								981,
								986
							]
						}
					],
					"src": "102:2604:7"
				},
				"id": 7
			},
			"OpenzepplineToken/RewardToken.sol": {
				"ast": {
					"absolutePath": "OpenzepplineToken/RewardToken.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							911
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							937
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1075
						],
						"RewardToken": [
							1192
						]
					},
					"id": 1193,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1078,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1193,
							"sourceUnit": 800,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1193,
							"sourceUnit": 148,
							"src": "118:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1193,
							"sourceUnit": 912,
							"src": "172:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1081,
										"name": "ERC20",
										"nameLocations": [
											"274:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "274:5:8"
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "274:5:8"
								},
								{
									"baseName": {
										"id": 1083,
										"name": "Ownable",
										"nameLocations": [
											"281:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "281:7:8"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "281:7:8"
								}
							],
							"canonicalName": "RewardToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1192,
							"linearizedBaseContracts": [
								1192,
								147,
								799,
								189,
								937,
								877,
								967
							],
							"name": "RewardToken",
							"nameLocation": "259:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1086,
									"mutability": "mutable",
									"name": "currentTime",
									"nameLocation": "305:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1192,
									"src": "297:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1085,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "407:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1099,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "424:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "428:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "424:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "436:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "444:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1103,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "450:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "450:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "444:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "436:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "418:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "418:43:8"
											}
										]
									},
									"id": 1110,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "526577617264546f6b656e",
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "365:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2a776aa54923a68806e6d50a40a28332ccac2b7062a6ee74697d69bf81833639",
														"typeString": "literal_string \"RewardToken\""
													},
													"value": "RewardToken"
												},
												{
													"hexValue": "525754",
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "379:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e29c89c6170c14d1aec33ef8c32df8beb88a6ff3e6e3c30a8bcb27e4321773e3",
														"typeString": "literal_string \"RWT\""
													},
													"value": "RWT"
												}
											],
											"id": 1093,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1090,
												"name": "ERC20",
												"nameLocations": [
													"359:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "359:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "359:26:8"
										},
										{
											"arguments": [
												{
													"id": 1095,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1088,
													"src": "394:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1096,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1094,
												"name": "Ownable",
												"nameLocations": [
													"386:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "386:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "386:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "345:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "337:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:22:8"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:0:8"
									},
									"scope": 1192,
									"src": "325:144:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "523:106:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "542:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "552:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "542:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d206d696e7420616d6f756e7420697320313030",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "556:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f",
																"typeString": "literal_string \"Maximum mint amount is 100\""
															},
															"value": "Maximum mint amount is 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f",
																"typeString": "literal_string \"Maximum mint amount is 100\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "534:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "534:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "534:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "602:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "606:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "602:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "614:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "596:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "596:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "596:25:8"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "onlyOwner",
												"nameLocations": [
													"514:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "514:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "514:9:8"
										}
									],
									"name": "mint",
									"nameLocation": "486:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "499:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "491:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:16:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:0:8"
									},
									"scope": 1192,
									"src": "477:152:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "691:354:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1139,
																	"name": "currentTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "710:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3630",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "724:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "710:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1142,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "730:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "736:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "730:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "710:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776169742031206d696e75746520666f722065616368206d696e74",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "746:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12",
																"typeString": "literal_string \"wait 1 minute for each mint\""
															},
															"value": "wait 1 minute for each mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d8f6aa4661c771e0a821821fab703d290a3f92d7084b28950811ab3acd24f12",
																"typeString": "literal_string \"wait 1 minute for each mint\""
															}
														],
														"id": 1138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "702:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "702:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "702:74:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1149,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "795:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1151,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "810:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "810:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "804:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "795:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "824:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "830:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1157,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "836:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "836:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "830:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "824:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "795:51:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d206d696e7420616d6f756e7420697320313030",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "847:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f",
																"typeString": "literal_string \"Maximum mint amount is 100\""
															},
															"value": "Maximum mint amount is 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf64d8c2be090254113519664d74580251f24f9849f20577ad8cbd0268c8823f",
																"typeString": "literal_string \"Maximum mint amount is 100\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "787:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:89:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "787:89:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1166,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "895:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "895:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1168,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "909:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "895:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "919:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "929:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1172,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "935:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "935:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "929:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "919:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "895:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c737570706c7920657863656564",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "946:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d",
																"typeString": "literal_string \"Totalsupply exceed\""
															},
															"value": "Totalsupply exceed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec5feac729bf5a3faabfde62948f68cb592a5b94b23765d8360623cb6203628d",
																"typeString": "literal_string \"Totalsupply exceed\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "887:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "887:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "986:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "990:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1180,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "980:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "980:17:8"
											},
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "1008:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1186,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1028:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1022:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1008:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "1008:29:8"
											}
										]
									},
									"functionSelector": "9a49090e",
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintReward",
									"nameLocation": "646:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "665:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "657:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "676:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "668:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:27:8"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:0:8"
									},
									"scope": 1192,
									"src": "637:408:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1193,
							"src": "250:800:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:1017:8"
				},
				"id": 8
			}
		}
	}
}